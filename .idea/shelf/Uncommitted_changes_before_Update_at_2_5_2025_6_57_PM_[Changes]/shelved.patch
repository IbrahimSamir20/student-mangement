Index: src/main/java/org/example/studentadminstator/components/CustomTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.components;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.List;\r\n\r\npublic class CustomTable<T> extends VBox {\r\n    private TableView<T> tableView;\r\n\r\n    public CustomTable() {\r\n        this.tableView = new TableView<>();\r\n        applyCustomStyle();\r\n        this.getChildren().add(tableView);\r\n        this.setSpacing(5);\r\n    }\r\n\r\n    private void applyCustomStyle() {\r\n        this.tableView.setBorder(AppStyle.border);\r\n        this.tableView.setBackground(AppStyle.background);\r\n    }\r\n\r\n    public void addColumn(String title, String property, double width) {\r\n        TableColumn<T, String> column = new TableColumn<>(title);\r\n        column.setCellValueFactory(new PropertyValueFactory<>(property));\r\n        column.setPrefWidth(width);\r\n        this.tableView.getColumns().add(column);\r\n    }\r\n\r\n    public void addRow(T item) {\r\n        this.tableView.getItems().add(item);\r\n    }\r\n\r\n    public void setTableData(ObservableList<T> data) {\r\n        this.tableView.setItems(data);\r\n    }\r\n\r\n    public void setTableData(T[] dataArray) {\r\n        this.tableView.setItems(FXCollections.observableArrayList(dataArray));\r\n    }\r\n\r\n    public TableView<T> getTableView() {\r\n        return tableView;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/components/CustomTable.java b/src/main/java/org/example/studentadminstator/components/CustomTable.java
--- a/src/main/java/org/example/studentadminstator/components/CustomTable.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/components/CustomTable.java	(date 1738774142071)
@@ -46,7 +46,7 @@
     public void setTableData(T[] dataArray) {
         this.tableView.setItems(FXCollections.observableArrayList(dataArray));
     }
-
+    public void deleteColumns(){ this.tableView.getColumns().clear(); }
     public TableView<T> getTableView() {
         return tableView;
     }
Index: src/main/java/org/example/studentadminstator/components/Navbar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.components;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.Text;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.stage.Stage;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.pages.Login;\r\n\r\npublic class Navbar extends BorderPane {\r\n\r\n    private String username;\r\n    Text hiText;\r\n    Text nameText;\r\n    CustomButton editButton;\r\n    CustomButton backButton;\r\n\r\n    public Navbar(String username, Stage stage) {\r\n        this.username = username;\r\n\r\n        hiText = new Text(\"Hi \uD83D\uDC4B\");\r\n        nameText = new Text(username);\r\n\r\n        hiText.setFont(AppStyle.font18);\r\n        nameText.setFont(AppStyle.font16Bold);\r\n\r\n        hiText.setFill(AppStyle.textColor);\r\n        nameText.setFill(AppStyle.textColor);\r\n\r\n        VBox leftBox = new VBox(hiText, nameText);\r\n        leftBox.setAlignment(Pos.CENTER_LEFT);\r\n        leftBox.setSpacing(5);\r\n        leftBox.setPadding(new Insets(10, 20, 10, 20));\r\n\r\n        EventHandler<ActionEvent> onEdit = e -> {};\r\n        EventHandler<ActionEvent> onBack = e -> {\r\n            stage.setWidth(1024);\r\n            stage.setHeight(900);\r\n            stage.setScene(new Scene(new Login(stage).getGrid()));\r\n            stage.show();\r\n        };\r\n\r\n        editButton = new CustomButton(onEdit, \"Edit\");\r\n        backButton = new CustomButton(onBack, \"Back\");\r\n\r\n        HBox hbox = new HBox(editButton, backButton);\r\n        hbox.setAlignment(Pos.CENTER_RIGHT);\r\n        hbox.setSpacing(10);\r\n        hbox.setPadding(new Insets(20));\r\n\r\n        this.setLeft(leftBox);\r\n        this.setRight(hbox);\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/components/Navbar.java b/src/main/java/org/example/studentadminstator/components/Navbar.java
--- a/src/main/java/org/example/studentadminstator/components/Navbar.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/components/Navbar.java	(date 1738774584925)
@@ -1,28 +1,29 @@
 package org.example.studentadminstator.components;
 
 import javafx.event.ActionEvent;
+import javafx.event.Event;
 import javafx.event.EventHandler;
+import javafx.event.EventType;
 import javafx.scene.Scene;
-import javafx.scene.layout.BorderPane;
+import javafx.scene.control.Button;
 import javafx.scene.layout.HBox;
+// import javafx.scene.layout.VBox;
 import javafx.scene.layout.VBox;
 import javafx.scene.text.Text;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.stage.Stage;
+import javafx.scene.layout.BorderPane;
 import org.example.studentadminstator.AppStyle;
 import org.example.studentadminstator.pages.Login;
-
+/// Make sure that events and buttons and button labels are ordered and does not differ in size
 public class Navbar extends BorderPane {
 
     private String username;
     Text hiText;
     Text nameText;
-    CustomButton editButton;
-    CustomButton backButton;
 
-    public Navbar(String username, Stage stage) {
-        this.username = username;
+    public Navbar(String username, Stage stage, String[] buttonLabels,CustomButton[] buttons,EventHandler<ActionEvent>[] handlers) {
 
         hiText = new Text("Hi ðŸ‘‹");
         nameText = new Text(username);
@@ -37,28 +38,30 @@
         leftBox.setAlignment(Pos.CENTER_LEFT);
         leftBox.setSpacing(5);
         leftBox.setPadding(new Insets(10, 20, 10, 20));
-
-        EventHandler<ActionEvent> onEdit = e -> {};
-        EventHandler<ActionEvent> onBack = e -> {
-            stage.setWidth(1024);
-            stage.setHeight(900);
-            stage.setScene(new Scene(new Login(stage).getGrid()));
-            stage.show();
-        };
-
-        editButton = new CustomButton(onEdit, "Edit");
-        backButton = new CustomButton(onBack, "Back");
-
-        HBox hbox = new HBox(editButton, backButton);
+        HBox hbox = new HBox();
         hbox.setAlignment(Pos.CENTER_RIGHT);
         hbox.setSpacing(10);
         hbox.setPadding(new Insets(20));
+        for(int i = 0; i < buttons.length; i++) {
+            buttons[i].setText(buttonLabels[i]);
+            buttons[i].addEventHandler(ActionEvent.ACTION, handlers[i]);
+            leftBox.getChildren().add(buttons[i]);
+            hbox.getChildren().add(buttons[i]);
+
+        }
+
 
         this.setLeft(leftBox);
         this.setRight(hbox);
     }
-
-    public String getUsername() {
+   
+    public String getUsername(){
         return username;
     }
-}
+    public void updateStudentName(String newName) {
+        this.username = newName;
+        this.nameText.setText("Hello, " + newName + "!");
+    }
+
+
+}
\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/pages/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppData;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomButton;\r\nimport org.example.studentadminstator.components.CustomInput;\r\nimport org.example.studentadminstator.components.Link;\r\nimport org.example.studentadminstator.data.Course;\r\nimport org.example.studentadminstator.data.CoursesDB;\r\nimport org.example.studentadminstator.data.Instructor;\r\nimport org.example.studentadminstator.data.InstructorDB;\r\nimport org.example.studentadminstator.data.Student;\r\nimport org.example.studentadminstator.data.StudentDB;\r\nimport org.example.studentadminstator.data.User;\r\nimport org.example.studentadminstator.data.UsersDB;\r\n\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.Text;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.Event;\r\nimport javafx.event.EventHandler;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Login extends VBox {\r\n    //UI\r\n    private final GridPane grid = new GridPane();\r\n    private final Stage primaryStage;\r\n    private final CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\");\r\n    private final CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\");\r\n    Link link ;\r\n    Text header = new Text(\"Login\");\r\n    //pages\r\n    StudentPage studentPage ;\r\n    InstructorPage instructorPage ;\r\n    AdministerPage administerPage ;\r\n    //DB\r\n    AppData data = AppData.getInstance();\r\n    CoursesDB<Course> coursesDB = data.getCoursesDB();\r\n    UsersDB<User> userDb = data.getUsersDB();\r\n    InstructorDB<Instructor> instructorDB = data.getInstructorDB();\r\n    StudentDB<Student> studentDB = data.getStudentDB();\r\n    \r\n// Start Logic\r\n    public Login(Stage primaryStage) {\r\n        this.primaryStage=primaryStage;\r\n        \r\n        \r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n        header.setFont(AppStyle.font32);\r\n        header.setFill(AppStyle.textColor);\r\n        this.link= new Link(\"if you not have account\", this::handleEvent, \"Signup\");\r\n\r\n    //Action\r\n        EventHandler<ActionEvent> onSubmit = e -> {\r\n            Boolean usernameValid =  usernameInput.getIsValid();\r\n            Boolean passwordValid =  passwordInput.getIsValid();\r\n            System.out.println(\"Username valid: \" + usernameValid.toString() + \", Password valid: \" + passwordValid.toString());\r\n\r\n            if(usernameValid && passwordValid){\r\n                //Authorization\r\n                    if(usernameInput.getInputValue().equals(\"IANEOP\") && passwordInput.getInputValue().equals(\"IANEOP\") ){\r\n                        System.out.println(\"Login successfully\");\r\n                        primaryStage.setScene(new Scene(new AdministerPage(coursesDB,userDb,instructorDB,studentDB, primaryStage).getPage(),1024,900));\r\n\r\n                    }else if(!userDb.searchUser(usernameInput.getInputValue(), passwordInput.getInputValue())){\r\n                        \r\n                        javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"Login Error\");\r\n                        alert.setHeaderText(\"Invalid Credentials\");\r\n                        alert.setContentText(\"Username or password is incorrect.\");\r\n                        alert.showAndWait();\r\n                    \r\n                    }else{\r\n                    \r\n                        if(userDb.getUserType(usernameInput.getInputValue()).equals(\"Instructor\")){\r\n                            Instructor instructor = instructorDB.fetchOneInstructor(usernameInput.getInputValue());\r\n                            primaryStage.setScene(new Scene(new InstructorPage(primaryStage, instructor).getPage()));\r\n                            System.out.println(instructor);\r\n                        }else{\r\n                             Student student = studentDB.fetchOneStudent(usernameInput.getInputValue().trim());\r\n                            primaryStage.setScene(new Scene(new StudentPage(primaryStage, student).getPage()));\r\n                            System.out.println(\"from studentPage\");\r\n                    \r\n                        }\r\n                    }\r\n                }\r\n                \r\n            };\r\n\r\n        CustomButton button = new CustomButton(onSubmit, \"Login\");\r\n            grid.add(header, 0, 0, 1, 1);\r\n            grid.add(usernameInput, 0, 2, 1, 1);\r\n            grid.add(passwordInput, 0, 3, 1, 1);\r\n            grid.add(button, 0, 4, 1, 1);\r\n            grid.add(link, 0, 5, 1, 1);\r\n        \r\n    }\r\n    public void handleEvent(Event e) {\r\n        primaryStage.setScene(new Scene(new Register(primaryStage).getGrid()));\r\n        primaryStage.setWidth(1024);\r\n        primaryStage.setHeight(900);\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/pages/Login.java b/src/main/java/org/example/studentadminstator/pages/Login.java
--- a/src/main/java/org/example/studentadminstator/pages/Login.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/pages/Login.java	(date 1738774617028)
@@ -36,6 +36,9 @@
     private final CustomInput passwordInput = new CustomInput("Enter Password","Password");
     Link link ;
     Text header = new Text("Login");
+    String errorUsername = "";
+    String errorPassword = "";
+    Boolean isVisible = false;
     //pages
     StudentPage studentPage ;
     InstructorPage instructorPage ;
@@ -67,14 +70,18 @@
             Boolean usernameValid =  usernameInput.getIsValid();
             Boolean passwordValid =  passwordInput.getIsValid();
             System.out.println("Username valid: " + usernameValid.toString() + ", Password valid: " + passwordValid.toString());
+            String username = usernameInput.getInputValue();
+            String password = passwordInput.getInputValue();
 
             if(usernameValid && passwordValid){
+
                 //Authorization
                     if(usernameInput.getInputValue().equals("IANEOP") && passwordInput.getInputValue().equals("IANEOP") ){
                         System.out.println("Login successfully");
-                        primaryStage.setScene(new Scene(new AdministerPage(coursesDB,userDb,instructorDB,studentDB, primaryStage).getPage(),1024,900));
 
-                    }else if(!userDb.searchUser(usernameInput.getInputValue(), passwordInput.getInputValue())){
+                        primaryStage.setScene(new Scene(new AdministerPage(primaryStage).getPage(),1024,900));
+
+                    }else if(!userDb.searchUser(username, password)){
                         
                         javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR);
                         alert.setTitle("Login Error");
@@ -84,12 +91,14 @@
                     
                     }else{
                     
-                        if(userDb.getUserType(usernameInput.getInputValue()).equals("Instructor")){
-                            Instructor instructor = instructorDB.fetchOneInstructor(usernameInput.getInputValue());
+                        if(userDb.getUserType(username).equals("Instructor")){
+                            Instructor instructor = instructorDB.fetchOneInstructor(username);
                             primaryStage.setScene(new Scene(new InstructorPage(primaryStage, instructor).getPage()));
                             System.out.println(instructor);
                         }else{
-                             Student student = studentDB.fetchOneStudent(usernameInput.getInputValue().trim());
+                            System.out.println(username);
+                            Student student = studentDB.fetchOneStudent(username);
+System.out.println(student.getName());
                             primaryStage.setScene(new Scene(new StudentPage(primaryStage, student).getPage()));
                             System.out.println("from studentPage");
                     
Index: src/main/java/org/example/studentadminstator/pages/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.pages;\r\n\r\nimport javafx.event.Event;\r\nimport javafx.scene.Scene;\r\nimport org.example.studentadminstator.AppData;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomButton;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.control.Button;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n// import javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\nimport org.example.studentadminstator.components.Link;\r\nimport org.example.studentadminstator.data.*;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Register extends VBox {\r\n    Text header = new Text();\r\n    private final GridPane grid = new GridPane();\r\n    private final CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\");\r\n    private final CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\");\r\n    //private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\");\r\n    private final CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private final CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    AppData data = AppData.getInstance();\r\n    UsersDB<User> usersDB = data.getUsersDB();\r\n    InstructorDB<Instructor> instructorDB = data.getInstructorDB();\r\n    StudentDB<Student> studentDB = data.getStudentDB();\r\n    Text loginAlert = new Text();\r\n    Stage primaryStage;\r\n    Link link;\r\n\r\n    public Register(Stage primaryStage) {\r\n\r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n        this.primaryStage=primaryStage;\r\n        header.setText(\"Register\");\r\n        header.setFont(AppStyle.font32);\r\n        header.setFill(AppStyle.textColor);\r\n        this.link= new Link(\"if you have an account\", this::handleEvent, \"Signin\");\r\n\r\n        EventHandler<ActionEvent> handelSubmit = e -> {\r\n            Boolean usernameValid =  usernameInput.getIsValid();\r\n            Boolean passwordValid =  passwordInput.getIsValid();\r\n            //Boolean courseValid =  courseInput.getIsValid();\r\n            Boolean genderValid = genderGroup.isValid();\r\n            Boolean jobValid = jobGroup.isValid();\r\n           \r\n            System.out.println(\"Username valid: \" + usernameValid.toString() + \", Password valid: \" + passwordValid.toString());\r\n            //Register\r\n            if(usernameValid && passwordValid && genderValid && jobValid ) {\r\n                if(usersDB.searchUser(usernameInput.getInputValue(), passwordInput.getInputValue())) {\r\n                    loginAlert.setText(\"User already exists Click on Sign in\");\r\n                    loginAlert.setFont(AppStyle.font18Bold);\r\n                    loginAlert.setFill(AppStyle.textColor);\r\n                    System.out.println(\"Found user successful\"+ usernameInput.getInputValue());\r\n                }else{\r\n                    usersDB.createUser(new User(usernameInput.getInputValue(), passwordInput.getInputValue(), jobGroup.getSelectedOption()));\r\n                    System.out.println(\"Created successful\"+ usernameInput.getInputValue() + \"Created Type\" + jobGroup.getSelectedOption());\r\n                    if(jobGroup.getSelectedOption().equals(\"Instructor\")) {\r\n                        instructorDB.createInstructor(new Instructor(usernameInput.getInputValue(), passwordInput.getInputValue(), genderGroup.getSelectedOption()));\r\n                        Instructor instructor = instructorDB.fetchOneInstructor(usernameInput.getInputValue());\r\n                        primaryStage.setScene(new Scene(new InstructorPage(primaryStage,instructor).getPage()));\r\n\r\n                    }else {\r\n                        studentDB.createStudent(new Student(usernameInput.getInputValue(), passwordInput.getInputValue(), genderGroup.getSelectedOption()));\r\n                        //Here we need backup the student name form database after created\r\n\r\n                        Student student= studentDB.fetchOneStudent(usernameInput.getInputValue());\r\n                        primaryStage.setScene(new Scene(new StudentPage(primaryStage,student).getPage()));\r\n                    }\r\n                }\r\n\r\n\r\n\r\n            }\r\n        };\r\n\r\n        CustomButton loginButton = new CustomButton(handelSubmit, \"Submit\");\r\n        grid.add(header, 0, 0, 1, 1);\r\n        grid.add(usernameInput, 0, 1, 1, 1);\r\n        grid.add(passwordInput, 0, 2, 1, 1);\r\n        //grid.add(courseInput, 0, 3, 1, 1);\r\n        grid.add(jobGroup, 0, 4, 1, 1);\r\n        grid.add(genderGroup, 0, 5, 1, 1);\r\n        grid.add(loginAlert, 0, 6, 1, 1);\r\n        grid.add(loginButton, 0, 7, 1, 1);\r\n        grid.add(link, 0, 8, 1, 1);\r\n\r\n    }\r\n    public void handleEvent(Event e) {\r\n        primaryStage.setScene(new Scene(new Login(primaryStage).getGrid()));\r\n        primaryStage.setWidth(1024);\r\n        primaryStage.setHeight(900);\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738774467304)
@@ -17,8 +17,6 @@
 import javafx.scene.text.Font;
 import javafx.scene.text.FontWeight;
 import javafx.scene.text.Text;
-// import javafx.scene.text.Text;
-//use latter for controller
 import javafx.event.ActionEvent;
 import javafx.event.EventHandler;
 import org.example.studentadminstator.components.CustomSelect;
@@ -29,12 +27,13 @@
 
 public class Register extends VBox {
     Text header = new Text();
-    private final GridPane grid = new GridPane();
-    private final CustomInput usernameInput = new CustomInput("Enter your username", "Username");
-    private final CustomInput passwordInput = new CustomInput("Enter Password","Password");
+    private GridPane grid = new GridPane();
+    private CustomInput usernameInput = new CustomInput("Enter your username", "Username");
+    private CustomInput passwordInput = new CustomInput("Enter Password","Password");
     //private CustomInput courseInput = new CustomInput("Enter Course","Course");
-    private final CustomSelect jobGroup = new CustomSelect("Job:", "Student", "Instructor");
-    private final CustomSelect genderGroup = new CustomSelect("Gender", "Male", "Female");
+    private CustomSelect jobGroup = new CustomSelect("Job:", "Student", "Instructor");
+    private CustomSelect genderGroup = new CustomSelect("Gender", "Male", "Female");
+    private CustomButton loginButton;
     AppData data = AppData.getInstance();
     UsersDB<User> usersDB = data.getUsersDB();
     InstructorDB<Instructor> instructorDB = data.getInstructorDB();
@@ -81,10 +80,9 @@
                         primaryStage.setScene(new Scene(new InstructorPage(primaryStage,instructor).getPage()));
 
                     }else {
+                        //Fixed Error
                         studentDB.createStudent(new Student(usernameInput.getInputValue(), passwordInput.getInputValue(), genderGroup.getSelectedOption()));
-                        //Here we need backup the student name form database after created
-
-                        Student student= studentDB.fetchOneStudent(usernameInput.getInputValue());
+                        Student student = studentDB.fetchOneStudent(usernameInput.getInputValue());
                         primaryStage.setScene(new Scene(new StudentPage(primaryStage,student).getPage()));
                     }
                 }
@@ -94,7 +92,7 @@
             }
         };
 
-        CustomButton loginButton = new CustomButton(handelSubmit, "Submit");
+        loginButton = new CustomButton(handelSubmit,"Submit");
         grid.add(header, 0, 0, 1, 1);
         grid.add(usernameInput, 0, 1, 1, 1);
         grid.add(passwordInput, 0, 2, 1, 1);
Index: src/main/java/org/example/studentadminstator/AppData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator;\r\n\r\nimport org.example.studentadminstator.data.*;\r\n\r\npublic class AppData {\r\n    private static final AppData instance = new AppData();\r\n    private final StudentDB<Student> studentDB;\r\n    //Reload\r\n    private final InstructorDB<Instructor> instructorDB;\r\n    private final CoursesDB<Course> coursesDB;\r\n    private final UsersDB<User> usersDB;\r\n\r\n    private AppData() {\r\n        studentDB = new StudentDB<>();\r\n        instructorDB = new InstructorDB<>();\r\n        coursesDB = new CoursesDB<>();\r\n        usersDB = new UsersDB<>();\r\n//        usersDB.createUser(new User(\"ibrahim\", \"abdelrahman aql\", \"Instructor\"));\r\n//        usersDB.createUser(new User(\"ibrahim\", \"ibrahim\", \"Student\"));\r\n\r\n    }\r\n\r\n    public static AppData getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public StudentDB<Student> getStudentDB() {\r\n        return studentDB;\r\n    }\r\n\r\n    public InstructorDB<Instructor> getInstructorDB() {\r\n        return instructorDB;\r\n    }\r\n\r\n    public CoursesDB<Course> getCoursesDB() {\r\n        return coursesDB;\r\n    }\r\n\r\n    public UsersDB<User> getUsersDB() {\r\n        return usersDB;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/AppData.java b/src/main/java/org/example/studentadminstator/AppData.java
--- a/src/main/java/org/example/studentadminstator/AppData.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/AppData.java	(date 1738774515366)
@@ -15,8 +15,10 @@
         instructorDB = new InstructorDB<>();
         coursesDB = new CoursesDB<>();
         usersDB = new UsersDB<>();
-//        usersDB.createUser(new User("ibrahim", "abdelrahman aql", "Instructor"));
-//        usersDB.createUser(new User("ibrahim", "ibrahim", "Student"));
+        usersDB.createUser(new User("ibrahim", "abdelrahman aql", "Instructor"));
+        usersDB.createUser(new User("ibrahim", "ibrahim", "Student"));
+        studentDB.createStudent(new Student("ibrahim", "ibrahim", "Student"));
+        instructorDB.createInstructor(new Instructor("abdelrahman aql", "ibrahim", "Instructor"));
 
     }
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]" date="1738522577967" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2025 20:55 [Changes]" />
+</changelist>
\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.components;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport javafx.event.EventHandler;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.geometry.Insets;\r\n\r\npublic class CustomButton extends VBox {\r\n    private Button button;\r\n\r\n    public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {\r\n        this.button = new Button(label);\r\n        this.button.setOnAction(eventHandler);\r\n        this.getChildren().add(this.button);\r\n\r\n        // Button Styling\r\n        button.setTextFill(AppStyle.colorBlack); // Black text\r\n        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        button.setPrefWidth(120); // Adjust width to fit the text properly\r\n        button.setPrefHeight(40); // Adjust height for better spacing\r\n        button.setBackground(new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY)));\r\n        button.setBorder(new Border(new BorderStroke(\r\n                AppStyle.colorBlack,\r\n                BorderStrokeStyle.SOLID,\r\n                new CornerRadii(10),\r\n                new BorderWidths(2)\r\n        )));\r\n\r\n        // Hover Effect\r\n        button.setOnMouseEntered(e -> button.setBackground(\r\n                new Background(new BackgroundFill(AppStyle.colorLightGray, new CornerRadii(10), Insets.EMPTY))\r\n        ));\r\n        button.setOnMouseExited(e -> button.setBackground(\r\n                new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY))\r\n        ));\r\n\r\n        // Pressed Effect\r\n        button.setOnMousePressed(e -> {\r\n            button.setScaleX(0.95);\r\n            button.setScaleY(0.95);\r\n        });\r\n        button.setOnMouseReleased(e -> {\r\n            button.setScaleX(1.0);\r\n            button.setScaleY(1.0);\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738774553124)
@@ -17,42 +17,85 @@
 import javafx.geometry.Insets;
 
 public class CustomButton extends VBox {
-    private Button button;
+      private  Button button;
 
-    public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {
+public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {
         this.button = new Button(label);
         this.button.setOnAction(eventHandler);
+
         this.getChildren().add(this.button);
 
-        // Button Styling
-        button.setTextFill(AppStyle.colorBlack); // Black text
+
+    button.setTextFill(AppStyle.colorBlack);
         button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));
-        button.setPrefWidth(120); // Adjust width to fit the text properly
-        button.setPrefHeight(40); // Adjust height for better spacing
-        button.setBackground(new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY)));
-        button.setBorder(new Border(new BorderStroke(
-                AppStyle.colorBlack,
-                BorderStrokeStyle.SOLID,
-                new CornerRadii(10),
-                new BorderWidths(2)
-        )));
+    button.setPrefWidth(120);
+    button.setPrefHeight(40);
+    button.setBackground(new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY)));
+    button.setBorder(new Border(new BorderStroke(
+            AppStyle.colorBlack,
+            BorderStrokeStyle.SOLID,
+            new CornerRadii(10),
+            new BorderWidths(2)
+    )));
 
-        // Hover Effect
-        button.setOnMouseEntered(e -> button.setBackground(
-                new Background(new BackgroundFill(AppStyle.colorLightGray, new CornerRadii(10), Insets.EMPTY))
-        ));
-        button.setOnMouseExited(e -> button.setBackground(
-                new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY))
-        ));
+    button.setOnMouseEntered(e -> button.setBackground(
+            new Background(new BackgroundFill(AppStyle.colorLightGray, new CornerRadii(10), Insets.EMPTY))
+    ));
+    button.setOnMouseExited(e -> button.setBackground(
+            new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY))
+    ));
 
-        // Pressed Effect
-        button.setOnMousePressed(e -> {
-            button.setScaleX(0.95);
-            button.setScaleY(0.95);
-        });
-        button.setOnMouseReleased(e -> {
-            button.setScaleX(1.0);
-            button.setScaleY(1.0);
+    // Pressed Effect
+    button.setOnMousePressed(e -> {
+        button.setScaleX(0.95);
+        button.setScaleY(0.95);
+    });
+    button.setOnMouseReleased(e -> {
+        button.setScaleX(1.0);
+        button.setScaleY(1.0);
+    });
+
+
+      }
+    //Constructor for nav bar usage
+    public CustomButton() {
+        this.button = new Button();
+        this.getChildren().add(this.button);
+
+
+        button.setTextFill(AppStyle.colorBlack);
+        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));
+        button.setPrefWidth(120);
+        button.setPrefHeight(40);
+        button.setBackground(new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY)));
+        button.setBorder(new Border(new BorderStroke(
+                AppStyle.colorBlack,
+                BorderStrokeStyle.SOLID,
+                new CornerRadii(10),
+                new BorderWidths(2)
+        )));
+
+        button.setOnMouseEntered(e -> button.setBackground(
+                new Background(new BackgroundFill(AppStyle.colorLightGray, new CornerRadii(10), Insets.EMPTY))
+        ));
+        button.setOnMouseExited(e -> button.setBackground(
+                new Background(new BackgroundFill(AppStyle.textColor, new CornerRadii(10), Insets.EMPTY))
+        ));
+
+        // Pressed Effect
+        button.setOnMousePressed(e -> {
+            button.setScaleX(0.95);
+            button.setScaleY(0.95);
         });
+        button.setOnMouseReleased(e -> {
+            button.setScaleX(1.0);
+            button.setScaleY(1.0);
+        });
+
     }
+    public void setText(String label) {
+        this.button.setText(label);
+    }
+
 }
+
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_1.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1" date="1738451156036" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 02/02/2025 01:05 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]" date="1738451117209" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 02/02/2025 01:05 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]" date="1738457882879" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2025 02:57 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]" date="1738457377296" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2025 02:49 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]" date="1738586780701" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/02/2025 14:46 [Changes]" />
+</changelist>
\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/pages/AdministerPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.pages;\r\n\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.control.Label;\r\n// import org.example.studentadminstator.components.CustomButton;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomTable;\r\nimport org.example.studentadminstator.components.Navbar;\r\nimport org.example.studentadminstator.components.Sidebar;\r\nimport org.example.studentadminstator.data.Course;\r\nimport org.example.studentadminstator.data.User;\r\nimport org.example.studentadminstator.data.CoursesDB;\r\nimport org.example.studentadminstator.data.UsersDB;\r\nimport org.example.studentadminstator.data.InstructorDB;\r\nimport org.example.studentadminstator.data.StudentDB;\r\nimport org.example.studentadminstator.data.Instructor;\r\nimport org.example.studentadminstator.data.Student;\r\n\r\n// import java.beans.EventHandler;\r\n// import java.lang.reflect.Array;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\n\r\n\r\npublic class AdministerPage extends BorderPane {\r\n        //TODO: Get Databases from AppData\r\n        private CoursesDB<Course> coursesDB;\r\n        private UsersDB<User> userDb;\r\n        private InstructorDB<Instructor> instructorDB;\r\n        private StudentDB<Student> studentDB;\r\n        private Stage primaryStage;\r\n        \r\n        @SuppressWarnings(\"unchecked\") // Suppress unchecked conversion warning\r\n        EventHandler<ActionEvent>[] handlers = new EventHandler[3];\r\n\r\n        public AdministerPage(CoursesDB<Course> coursesDB, UsersDB<User> userDb, InstructorDB<Instructor> instructorDB, StudentDB<Student> studentDB, Stage primaryStage) {\r\n                this.coursesDB = coursesDB;\r\n                this.userDb = userDb;\r\n                this.instructorDB = instructorDB;\r\n                this.studentDB = studentDB;\r\n                this.primaryStage = primaryStage;\r\n                this.setBackground(AppStyle.background);\r\n\r\n                Navbar navbar = new Navbar(\"Admin Dashboard\",primaryStage);\r\n                this.setTop(navbar);\r\n\r\n                Sidebar sidebar = new Sidebar(\"das\",handlers);\r\n                this.setLeft(sidebar);\r\n\r\n                CustomTable<Course> courseTable = new CustomTable<>();\r\n                courseTable.addColumn(\"Course Name\", \"name\", 400);\r\n\r\n                VBox courseContainer = new VBox();\r\n                courseContainer.setPadding(new Insets(10));\r\n                courseContainer.setSpacing(10);\r\n\r\n                Label courseLabel = new Label(\"Course\");\r\n                courseContainer.getChildren().addAll(courseLabel, courseTable);\r\n                this.setCenter(courseContainer);\r\n        }\r\n        //Edit Table\r\n\r\n        public BorderPane getPage() {\r\n                return this;\r\n        }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/pages/AdministerPage.java b/src/main/java/org/example/studentadminstator/pages/AdministerPage.java
--- a/src/main/java/org/example/studentadminstator/pages/AdministerPage.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/pages/AdministerPage.java	(date 1738774577688)
@@ -1,12 +1,17 @@
 package org.example.studentadminstator.pages;
 
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
 import javafx.geometry.Insets;
+import javafx.scene.Scene;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.VBox;
 import javafx.stage.Stage;
 import javafx.scene.control.Label;
 // import org.example.studentadminstator.components.CustomButton;
+import org.example.studentadminstator.AppData;
 import org.example.studentadminstator.AppStyle;
+import org.example.studentadminstator.components.CustomButton;
 import org.example.studentadminstator.components.CustomTable;
 import org.example.studentadminstator.components.Navbar;
 import org.example.studentadminstator.components.Sidebar;
@@ -24,44 +29,98 @@
 import javafx.event.ActionEvent;
 import javafx.event.EventHandler;
 
+import java.util.ArrayList;
+
 
 public class AdministerPage extends BorderPane {
         //TODO: Get Databases from AppData
-        private CoursesDB<Course> coursesDB;
-        private UsersDB<User> userDb;
-        private InstructorDB<Instructor> instructorDB;
-        private StudentDB<Student> studentDB;
+        AppData data = AppData.getInstance();
+        UsersDB<User> usersDB = data.getUsersDB();
+        InstructorDB<Instructor> instructorDB = data.getInstructorDB();
+        StudentDB<Student> studentDB = data.getStudentDB();
+        CoursesDB<Course> coursesDB = data.getCoursesDB();
         private Stage primaryStage;
-        
-        @SuppressWarnings("unchecked") // Suppress unchecked conversion warning
-        EventHandler<ActionEvent>[] handlers = new EventHandler[3];
+
+        private EventHandler[] handlers = new EventHandler[3];
 
-        public AdministerPage(CoursesDB<Course> coursesDB, UsersDB<User> userDb, InstructorDB<Instructor> instructorDB, StudentDB<Student> studentDB, Stage primaryStage) {
-                this.coursesDB = coursesDB;
-                this.userDb = userDb;
-                this.instructorDB = instructorDB;
-                this.studentDB = studentDB;
+        public AdministerPage(Stage primaryStage) {
                 this.primaryStage = primaryStage;
                 this.setBackground(AppStyle.background);
-
-                Navbar navbar = new Navbar("Admin Dashboard",primaryStage);
+                EventHandler<ActionEvent> onAdd = event -> {};
+                EventHandler<ActionEvent> onEdit = event -> {};
+                EventHandler<ActionEvent> onBack = event -> {
+                        primaryStage.setScene(new Scene(new Login(primaryStage).getGrid()));
+                        primaryStage.show();
+                };
+                String[] labels = {"Add","Edit", "Back"};
+                EventHandler[] navHandlers = {onAdd,onEdit, onBack};
+                CustomButton[] buttons = {new CustomButton(),new CustomButton(), new CustomButton()};
+                Navbar navbar = new Navbar("Admin Dashboard",primaryStage, labels, buttons,navHandlers);
                 this.setTop(navbar);
-
-                Sidebar sidebar = new Sidebar("das",handlers);
-                this.setLeft(sidebar);
-
                 CustomTable<Course> courseTable = new CustomTable<>();
-                courseTable.addColumn("Course Name", "name", 400);
 
                 VBox courseContainer = new VBox();
                 courseContainer.setPadding(new Insets(10));
                 courseContainer.setSpacing(10);
 
-                Label courseLabel = new Label("Course");
+                Label courseLabel = new Label();
                 courseContainer.getChildren().addAll(courseLabel, courseTable);
                 this.setCenter(courseContainer);
+
+                //Empty Table columns before adding new columns
+                handlers[0] = e -> {
+                        courseTable.deleteColumns();
+                        System.out.println("Instructor clicked");
+                        courseTable.addColumn("Instructor Name", "instructor", 200);
+                        courseTable.addColumn("Course", "name", 100);
+
+                        ObservableList<Course> tableInstructor = FXCollections.observableArrayList();
+                        ArrayList<Course> courses= coursesDB.fetch();
+                        for(Course c : courses){
+                                tableInstructor.add(c);
+                        }
+                        courseTable.setTableData(tableInstructor);
+
+
+                };
+                handlers[1] = e -> {
+                        courseTable.deleteColumns();
+                        System.out.println("Student clicked");
+                        courseTable.addColumn("Student", "students", 200);
+                        courseTable.addColumn("Course", "name", 100);
+                        courseTable.addColumn("Grade", "grade", 100);
+                        courseTable.addColumn("Attendance", "attendant", 100);
+
+                        ObservableList<Course> tableStudent = FXCollections.observableArrayList();
+                        ArrayList<Course> courses= coursesDB.fetch();
+                        for(Course c : courses){
+                                tableStudent.add(c);
+                        }
+                        courseTable.setTableData(tableStudent);
+
+                };
+                handlers[2] = e -> {
+                        courseTable.deleteColumns();
+                        System.out.println("Courses clicked");
+                        courseTable.addColumn("Course", "name", 100);
+                        courseTable.addColumn("Instructor", "instructor", 100);
+                        courseTable.addColumn("Student", "students", 100);
+
+                        ObservableList<Course> tableCourse = FXCollections.observableArrayList();
+                        ArrayList<Course> courses= coursesDB.fetch();
+                        for(Course c : courses){
+                                tableCourse.add(c);
+                        }
+                        courseTable.setTableData(tableCourse);
+
+                };
+
+                Sidebar sidebar = new Sidebar("dashboard",handlers);
+                this.setLeft(sidebar);
+
+
         }
-        //Edit Table
+        //TODO: Editable Table and Add Course Button
 
         public BorderPane getPage() {
                 return this;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142071)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_.xml	(date 1738774142071)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]" date="1738603162267" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/02/2025 19:19 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]" date="1738460006531" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2025 03:32 [Changes]" />
+</changelist>
\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/pages/InstructorPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.pages;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.geometry.Insets;\r\nimport org.example.studentadminstator.AppData;\r\nimport org.example.studentadminstator.components.CustomButton;\r\nimport org.example.studentadminstator.components.CustomTable;\r\nimport org.example.studentadminstator.components.Navbar;\r\nimport org.example.studentadminstator.data.*;\r\n\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class InstructorPage extends BorderPane {\r\n        AppData appData = AppData.getInstance();\r\n        CoursesDB<Course> coursesDB = appData.getCoursesDB();\r\n        InstructorDB<Instructor> instructorDB = appData.getInstructorDB();\r\n        StudentDB<Student> studentDB = appData.getStudentDB();\r\n        private EventHandler<ActionEvent> onClick ;\r\n        public InstructorPage(Stage primaryStage,Instructor instructor){\r\n                Navbar navbar = new Navbar(\"\", primaryStage);\r\n                this.setTop(navbar);\r\n                this.setMinSize(1024,900);\r\n\r\n\r\n                CustomTable<Instructor> instructorTable = new CustomTable<Instructor>();\r\n                instructorTable.addColumn(\"Course\", \"Course\", 350);\r\n                instructorTable.addColumn(\"Student\", \"student\", 350);\r\n                instructorTable.addColumn(\"Attendance\", \"attendant\", 350);\r\n                instructorTable.addColumn(\"Grade\", \"grade\", 350);\r\n//                instructorTable.addColumn(\"Action\", new CustomButton(this.onClick,\"Edit\"), 350);\r\n                ObservableList<Course> tableCourses = FXCollections.observableArrayList();\r\n                ArrayList<Course> courses= coursesDB.fetch();\r\n                //TODO: add the courses that this instructor teach\r\n                for(Course c : courses){\r\n                      final var get =  tableCourses.add(c);\r\n                }\r\n\r\n                VBox instructorContainer = new VBox();\r\n                instructorContainer.setPadding(new Insets(10));\r\n                instructorContainer.setSpacing(10);\r\n\r\n                Label courseLabel = new Label(\"Course\");\r\n                instructorContainer.getChildren().addAll(courseLabel, instructorTable);\r\n                this.setCenter(instructorContainer);\r\n                \r\n        }\r\n//        this.onClick = e -> {\r\n//\r\n//        };\r\n\r\n        public BorderPane getPage() {\r\n                return this;\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/pages/InstructorPage.java b/src/main/java/org/example/studentadminstator/pages/InstructorPage.java
--- a/src/main/java/org/example/studentadminstator/pages/InstructorPage.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/pages/InstructorPage.java	(date 1738774567977)
@@ -4,6 +4,7 @@
 import javafx.collections.ObservableList;
 import javafx.event.ActionEvent;
 import javafx.event.EventHandler;
+import javafx.scene.Scene;
 import javafx.scene.control.Label;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.VBox;
@@ -24,9 +25,17 @@
         CoursesDB<Course> coursesDB = appData.getCoursesDB();
         InstructorDB<Instructor> instructorDB = appData.getInstructorDB();
         StudentDB<Student> studentDB = appData.getStudentDB();
-        private EventHandler<ActionEvent> onClick ;
+
         public InstructorPage(Stage primaryStage,Instructor instructor){
-                Navbar navbar = new Navbar("", primaryStage);
+                EventHandler<ActionEvent> onEdit = event -> {};
+                EventHandler<ActionEvent> onBack = event -> {
+                        primaryStage.setScene(new Scene(new Login(primaryStage).getGrid()));
+                        primaryStage.show();
+                };
+                String[] labels = {"Edit", "Back"};
+                EventHandler[] navHandlers = {onEdit, onBack};
+                CustomButton[] buttons = {new CustomButton(), new CustomButton()};
+                Navbar navbar = new Navbar(instructor.getName(), primaryStage, labels, buttons, navHandlers);
                 this.setTop(navbar);
                 this.setMinSize(1024,900);
 
@@ -36,12 +45,11 @@
                 instructorTable.addColumn("Student", "student", 350);
                 instructorTable.addColumn("Attendance", "attendant", 350);
                 instructorTable.addColumn("Grade", "grade", 350);
-//                instructorTable.addColumn("Action", new CustomButton(this.onClick,"Edit"), 350);
                 ObservableList<Course> tableCourses = FXCollections.observableArrayList();
                 ArrayList<Course> courses= coursesDB.fetch();
                 //TODO: add the courses that this instructor teach
                 for(Course c : courses){
-                      final var get =  tableCourses.add(c);
+                        tableCourses.add(c);
                 }
 
                 VBox instructorContainer = new VBox();
@@ -53,9 +61,6 @@
                 this.setCenter(instructorContainer);
                 
         }
-//        this.onClick = e -> {
-//
-//        };
 
         public BorderPane getPage() {
                 return this;
Index: src/main/java/org/example/studentadminstator/data/Instructor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.data;\r\n\r\npublic class Instructor extends User {\r\n       private String name;\r\n       private String grade ;\r\n              \r\n    public Instructor(String username, String password, String type) {\r\n        super(username, password, type); \r\n        this.name=username;\r\n\r\n    }\r\n    \r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getGrade() {\r\n        return grade;\r\n    }\r\n\r\n    public void setGrade(String grade) {\r\n        this.grade = grade;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/data/Instructor.java b/src/main/java/org/example/studentadminstator/data/Instructor.java
--- a/src/main/java/org/example/studentadminstator/data/Instructor.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/data/Instructor.java	(date 1738774142071)
@@ -28,6 +28,7 @@
 
 
 
+
 }
 
 
Index: src/main/java/org/example/studentadminstator/pages/StudentPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.pages;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.Priority;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\nimport org.example.studentadminstator.AppData;\r\nimport org.example.studentadminstator.components.CustomTable;\r\nimport org.example.studentadminstator.components.Navbar;\r\nimport org.example.studentadminstator.data.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class StudentPage extends BorderPane {\r\n    AppData appData = AppData.getInstance();\r\n    CoursesDB<Course> coursesDB = appData.getCoursesDB();\r\n    InstructorDB<Instructor> instructorDB = appData.getInstructorDB();\r\n    public StudentPage(Stage primaryStage,Student student){\r\n        Navbar navbar = new Navbar(student.getName(), primaryStage);\r\n        this.setTop(navbar);\r\n        this.setMinSize(1024,900);\r\n\r\n        CustomTable<Course> studentTable = new CustomTable<Course>();\r\n        studentTable.addColumn(\"Name\", \"name\", 250);\r\n        studentTable.addColumn(\"Attendance\", \"attendant\", 250);\r\n        studentTable.addColumn(\"Grade\", \"grade\", 250);\r\n\r\n        ObservableList<Course> tableCourses = FXCollections.observableArrayList();\r\n        ArrayList<Course> courses= coursesDB.fetch();\r\n        //Adding data to tableview list\r\n        for(Course c : courses){\r\n            tableCourses.add(c);\r\n        }\r\n        studentTable.setTableData(tableCourses);\r\n        VBox studentContainer = new VBox();\r\n        studentContainer.setSpacing(10);\r\n        studentContainer.setPadding(new Insets(10));\r\n        this.setCenter(studentContainer);\r\n        studentContainer.getChildren().add(studentTable);\r\n\r\n    }\r\n\r\n    public BorderPane getPage() {\r\n        return this;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/pages/StudentPage.java b/src/main/java/org/example/studentadminstator/pages/StudentPage.java
--- a/src/main/java/org/example/studentadminstator/pages/StudentPage.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/pages/StudentPage.java	(date 1738774592094)
@@ -6,13 +6,21 @@
 import javafx.event.EventHandler;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
+import javafx.scene.Scene;
+import javafx.scene.control.Alert;
+import javafx.scene.control.Button;
 import javafx.scene.control.Label;
+import javafx.scene.control.TextField;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.GridPane;
 import javafx.scene.layout.Priority;
 import javafx.scene.layout.VBox;
+import javafx.stage.Modality;
 import javafx.stage.Stage;
 import org.example.studentadminstator.AppData;
+import org.example.studentadminstator.AppStyle;
+import org.example.studentadminstator.components.CustomButton;
+import org.example.studentadminstator.components.CustomPopUp;
 import org.example.studentadminstator.components.CustomTable;
 import org.example.studentadminstator.components.Navbar;
 import org.example.studentadminstator.data.*;
@@ -22,33 +30,48 @@
     AppData appData = AppData.getInstance();
     CoursesDB<Course> coursesDB = appData.getCoursesDB();
     InstructorDB<Instructor> instructorDB = appData.getInstructorDB();
-    public StudentPage(Stage primaryStage,Student student){
-        Navbar navbar = new Navbar(student.getName(), primaryStage);
-        this.setTop(navbar);
-        this.setMinSize(1024,900);
-
-        CustomTable<Course> studentTable = new CustomTable<Course>();
-        studentTable.addColumn("Name", "name", 250);
-        studentTable.addColumn("Attendance", "attendant", 250);
-        studentTable.addColumn("Grade", "grade", 250);
+
+       public StudentPage(Stage primaryStage,Student student){
+           EventHandler<ActionEvent> onEdit = event -> {
+               CustomPopUp popup = new CustomPopUp(primaryStage, student.getName(),student, (Navbar) this.getTop(), appData);
+               popup.showAndWait();
+           };
+           EventHandler<ActionEvent> onBack = event -> {
+               primaryStage.setScene(new Scene(new Login(primaryStage).getGrid()));
+               primaryStage.show();
+           };
+           String[] labels = {"Edit", "Back"};
+           EventHandler[] navHandlers = {onEdit, onBack};
+           CustomButton[] buttons = {new CustomButton(), new CustomButton()};
+           Navbar navbar = new Navbar(student.getName(), primaryStage, labels, buttons,navHandlers);
+           this.setTop(navbar);
+           this.setMinSize(1024,900);
+            this.setBackground(AppStyle.background);
+            CustomTable<Course> studentTable = new CustomTable<Course>();
+            studentTable.addColumn("Name", "name", 250);
+            studentTable.addColumn("Attendance", "attendant", 250);
+            studentTable.addColumn("Grade", "grade", 250);
 
-        ObservableList<Course> tableCourses = FXCollections.observableArrayList();
-        ArrayList<Course> courses= coursesDB.fetch();
-        //Adding data to tableview list
-        for(Course c : courses){
-            tableCourses.add(c);
-        }
-        studentTable.setTableData(tableCourses);
-        VBox studentContainer = new VBox();
-        studentContainer.setSpacing(10);
-        studentContainer.setPadding(new Insets(10));
-        this.setCenter(studentContainer);
-        studentContainer.getChildren().add(studentTable);
+           ObservableList<Course> tableCourses = FXCollections.observableArrayList();
+           ArrayList<Course> courses= coursesDB.fetch();
+           //Adding data to tableview list
+           for(Course c : courses){
+               tableCourses.add(c);
+           }
+           studentTable.setTableData(tableCourses);
+           VBox studentContainer = new VBox();
+            studentContainer.setSpacing(10);
+           studentContainer.setPadding(new Insets(10));
+            this.setCenter(studentContainer);
+           studentContainer.getChildren().add(studentTable);
 
-    }
+
+       }
+
+
 
     public BorderPane getPage() {
         return this;
     }
 
-}
\ No newline at end of file
+}
Index: src/main/java/org/example/studentadminstator/data/Course.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.data;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class Course {\r\n        private String name;\r\n        private String attendant;\r\n        private int grade;\r\n        private Instructor instructor;\r\n        private Student[] students;\r\n        //Course Data Structure\r\n        public Course (String name, String attendant,int grade, Instructor instructor,Student... students){\r\n                \r\n                this.name = name;\r\n                this.attendant = attendant;\r\n                this.grade = grade;\r\n                this.students = students;\r\n                this.instructor = instructor;\r\n\r\n        }\r\n\r\n        public Course (String name, String attendant,int grade){\r\n\r\n                this.name = name;\r\n                this.attendant = attendant;\r\n//                this.grade = grade;\r\n                this.grade = grade;\r\n\r\n        }\r\n        \r\n        public String getName() {\r\n            return name;\r\n        }\r\n\r\n        public void setName(String name) {\r\n            this.name = name;\r\n        }\r\n\r\n        public String getAttendant() {\r\n            return attendant;\r\n        }\r\n\r\n        public void setAttendant(String attendant) {\r\n            this.attendant = attendant;\r\n        }\r\n\r\n        public int getGrade() {\r\n            return grade;\r\n        }\r\n\r\n        public void setGrade(int grade) {\r\n            this.grade = grade;\r\n        }\r\n\r\n        public Instructor getInstructor() {\r\n            return instructor;\r\n        }\r\n\r\n        public void setInstructor(Instructor instructor) {\r\n            this.instructor = instructor;\r\n        }\r\n\r\n        public Student[] getStudents() {\r\n            return students;\r\n        }\r\n\r\n        public void setStudents(Student[] students) {\r\n            this.students = students;\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return \"Course{\" +\r\n                    \"name='\" + name + '\\'' +\r\n                    \", attendant='\" + attendant + '\\'' +\r\n                    \", grade=\" + grade +\r\n                    \", instructor=\" + instructor +\r\n                    \", students=\" + Arrays.toString(students) +\r\n                    '}';\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/data/Course.java b/src/main/java/org/example/studentadminstator/data/Course.java
--- a/src/main/java/org/example/studentadminstator/data/Course.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/data/Course.java	(date 1738774542549)
@@ -18,56 +18,67 @@
                 this.instructor = instructor;
 
         }
-
+        //Student Table View Data Structure
         public Course (String name, String attendant,int grade){
 
                 this.name = name;
                 this.attendant = attendant;
-//                this.grade = grade;
                 this.grade = grade;
 
         }
         
+        // Getter for name
         public String getName() {
             return name;
         }
 
+        // Setter for name
         public void setName(String name) {
             this.name = name;
         }
 
+        // Getter for attendant
         public String getAttendant() {
             return attendant;
         }
 
+        // Setter for attendant
         public void setAttendant(String attendant) {
             this.attendant = attendant;
         }
 
+        // Getter for grade
         public int getGrade() {
             return grade;
         }
 
+
+        // Setter for grade
         public void setGrade(int grade) {
             this.grade = grade;
         }
 
+        // Getter for instructor
         public Instructor getInstructor() {
             return instructor;
         }
 
+        // Setter for instructor
         public void setInstructor(Instructor instructor) {
             this.instructor = instructor;
         }
 
+        // Getter for students
         public Student[] getStudents() {
             return students;
         }
 
+        // Setter for students
         public void setStudents(Student[] students) {
             this.students = students;
         }
 
+        // toString method
         @Override
         public String toString() {
             return "Course{" +
Index: src/main/java/org/example/studentadminstator/data/StudentDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.data;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class StudentDB<T> {\r\n       private final ArrayList<Student> studentDB = new ArrayList<>();\r\n\r\n       public void createStudent(Student student){\r\n                studentDB.add(student);\r\n       }\r\n\r\n       public void updateStudent(int index, Student student) {\r\n                studentDB.set(index, student);\r\n       }\r\n\r\n       public void deleteStudent(int index){\r\n                studentDB.remove(index);\r\n       }\r\n\r\n       public ArrayList<Student> fetchStudent(){\r\n        return studentDB;\r\n       }\r\n\r\n\r\n//       public Student fetchOneStudent (String username){\r\n//        for(Student student:studentDB){\r\n//            if(student.getUsername().equals(username)){\r\n//                return student;\r\n//            }\r\n//        }\r\n//        return null;\r\n//       }\r\n\r\n        public T fetchOneStudent(String inputValue) {\r\n           for(Student student:studentDB){\r\n               if(student.getUsername().equals(inputValue)){\r\n                   return (T) student;\r\n               }\r\n           }\r\n\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/data/StudentDB.java b/src/main/java/org/example/studentadminstator/data/StudentDB.java
--- a/src/main/java/org/example/studentadminstator/data/StudentDB.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/data/StudentDB.java	(date 1738774610386)
@@ -12,6 +12,15 @@
        public void updateStudent(int index, Student student) {
                 studentDB.set(index, student);
        }
+    public void updateStudentWithoutIndex(Student student) {
+        for (int i = 0; i < studentDB.size(); i++) {
+            if (studentDB.get(i).getUsername().equals(student.getUsername())) {
+                studentDB.set(i, student);
+                return;
+            }
+        }
+        System.err.println("Student not found for update: " + student.getUsername()); // Handle the case where the student is not found.
+    }
 
        public void deleteStudent(int index){
                 studentDB.remove(index);
@@ -21,23 +30,16 @@
         return studentDB;
        }
 
-
-//       public Student fetchOneStudent (String username){
-//        for(Student student:studentDB){
-//            if(student.getUsername().equals(username)){
-//                return student;
-//            }
-//        }
-//        return null;
-//       }
-
-        public T fetchOneStudent(String inputValue) {
-           for(Student student:studentDB){
-               if(student.getUsername().equals(inputValue)){
-                   return (T) student;
-               }
-           }
-
-        return null;
-    }
+       public Student fetchOneStudent (String username){
+        for(Student student:studentDB){
+            if(student.getUsername().equals(username)){
+                return student;
+            }
+        }
+        return null;    
+       }
+
+       
+
+      
 }
Index: src/main/java/org/example/studentadminstator/data/InstructorDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.data;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class InstructorDB<T> {\r\n         Instructor oneInstructor=new Instructor(\"abdelrahman aql\", \"ibrahim\",  \"instructor\");\r\n       private final ArrayList<Instructor> instructorDB = new ArrayList<>();\r\n\r\n       public InstructorDB() {\r\n            createInstructor(oneInstructor);\r\n                \r\n        }\r\n\r\n       public void createInstructor(Instructor instructor){\r\n                instructorDB.add(instructor);\r\n       }\r\n\r\n       public void updateInstructor(int index , Instructor instructor){\r\n                instructorDB.set(index, instructor);\r\n       }\r\n\r\n       public void deleteInstructor(int index){\r\n                instructorDB.remove(index);\r\n       }\r\n\r\n    public ArrayList<Instructor> fetchInstructors() {\r\n        return instructorDB;\r\n    }\r\n\r\n    public Instructor fetchOneInstructor(String username) {\r\n        for (Instructor instructor : instructorDB) {\r\n            if (instructor.getUsername().equals(username)) {\r\n                return instructor;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n//   public int getIndex (String username){\r\n//           for(Instructor  instructor:instructorDB){\r\n//\r\n//               if(instructor.getUsername().equals(username)){\r\n//                   return instructorDB.indexOf(instructor);\r\n//               }\r\n//\r\n//           }\r\n//    return -1;\r\n//       }\r\n       \r\n\r\n      \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/data/InstructorDB.java b/src/main/java/org/example/studentadminstator/data/InstructorDB.java
--- a/src/main/java/org/example/studentadminstator/data/InstructorDB.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/data/InstructorDB.java	(date 1738774142071)
@@ -36,6 +36,17 @@
         return null;
     }
 
+    public void updateInstructorWithoutIndex(Instructor instructor) {
+        for (int i = 0; i < instructorDB.size(); i++) {
+            if (instructorDB.get(i).getUsername().equals(instructor.getUsername())) {
+                instructorDB.set(i, instructor);
+                return;
+            }
+        }
+        System.err.println("Student not found for update: " + instructor.getUsername()); // Handle the case where the student is not found.
+
+    }
+
 
 //   public int getIndex (String username){
 //           for(Instructor  instructor:instructorDB){
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]" date="1738451239810" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 02/02/2025 01:07 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1738774142071)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_1.xml	(date 1738774142071)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1" date="1738603197801" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/02/2025 19:19 [Changes]" />
+</changelist>
\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/data/UsersDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.studentadminstator.data;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class UsersDB<T> {\r\n        private final ArrayList<User> userDB = new ArrayList<>();\r\n        \r\n        public UsersDB (){\r\n        }\r\n\r\n        public void createUser(User user){\r\n                userDB.add(user);\r\n        }\r\n\r\n        public void deleteUser(User user){\r\n                userDB.remove(user);\r\n        }\r\n\r\n        public void updateUser(User user,int index){\r\n                userDB.set(index, user);\r\n        }\r\n\r\n        public ArrayList<User> fetchAllUsers(){\r\n                return userDB;\r\n        }\r\n\r\n        public User fetchOneUser(int index){\r\n                return userDB.get(index);\r\n        }\r\n\r\n        public Boolean searchUser(String username, String password) {\r\n            for (User user : userDB) {\r\n                if (user.getUsername().equals(username) && user.getPassword().equals(password)) {\r\n                    return true; \r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public String getUserType(String username){\r\n                String type = \"\"; \r\n                for(User user:userDB){\r\n                        if(user.getUsername().equals(username)){\r\n                                type = user.getType();\r\n                                return type; \r\n                        }\r\n                }\r\n                return type; \r\n        }\r\n\r\n//        public int getIndex(String username){\r\n//                for(User user:userDB){\r\n//                        if(user.getUsername().equals(username)){\r\n//                                return userDB.indexOf(user);\r\n//                        }\r\n//                }\r\n//                return -1;\r\n//        }\r\n\r\n        \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/data/UsersDB.java b/src/main/java/org/example/studentadminstator/data/UsersDB.java
--- a/src/main/java/org/example/studentadminstator/data/UsersDB.java	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/src/main/java/org/example/studentadminstator/data/UsersDB.java	(date 1738774142071)
@@ -24,8 +24,13 @@
                 return userDB;
         }
 
-        public User fetchOneUser(int index){
-                return userDB.get(index);
+        public User fetchOneUser (String username){
+                for(User user:userDB){
+                        if(user.getUsername().equals(username)){
+                                return user;
+                        }
+                }
+                return null;
         }
 
         public Boolean searchUser(String username, String password) {
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]" date="1738541808912" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/02/2025 02:16 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142071)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch	(date 1738774142071)
@@ -0,0 +1,171 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Administer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Administer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;d337fe82-0e2f-4312-88a8-b9346207c561&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.CustomTable$TestApp.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;peter&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Peter/Desktop/student-mangement&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision d18ce9f3fe3944b9225544781ddbe878640a407a)
++++ b/.idea/workspace.xml	(date 1738590610799)
+@@ -8,7 +8,7 @@
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Administer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Administer.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/StudentPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/StudentPage.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -61,27 +61,27 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;Application.CustomTable$TestApp.executor&quot;: &quot;Run&quot;,
+-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+-    &quot;git-widget-placeholder&quot;: &quot;peter&quot;,
+-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Peter/Desktop/student-mangement&quot;,
+-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "Application.CustomTable$TestApp.executor": "Run",
++    "Application.Main.executor": "Run",
++    "RunOnceActivity.OpenProjectViewOnStart": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "RunOnceActivity.git.unshallow": "true",
++    "git-widget-placeholder": "main",
++    "kotlin-language-version-configured": "true",
++    "last_opened_file_path": "C:/Users/Peter/Desktop/student-mangement",
++    "node.js.detected.package.eslint": "true",
++    "node.js.detected.package.tslint": "true",
++    "node.js.selected.package.eslint": "(autodetect)",
++    "node.js.selected.package.tslint": "(autodetect)",
++    "nodejs_package_manager_path": "npm",
++    "project.structure.last.edited": "Project",
++    "project.structure.proportion": "0.0",
++    "project.structure.side.proportion": "0.0",
++    "vue.rearranger.settings.migration": "true"
+   }
+-}</component>
++}]]></component>
+   <component name="RunManager" selected="Application.Main">
+     <configuration name="CustomTable$TestApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+       <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.components.CustomTable$TestApp" />
+@@ -116,6 +116,14 @@
+       </list>
+     </recent_temporary>
+   </component>
++  <component name="SharedIndexes">
++    <attachedChunks>
++      <set>
++        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189" />
++        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189" />
++      </set>
++    </attachedChunks>
++  </component>
+   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+   <component name="TaskManager">
+     <task active="true" id="Default" summary="Default task">
+@@ -154,6 +162,7 @@
+   </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Adding Sidebar" />
++    <option name="LAST_COMMIT_MESSAGE" value="Adding Sidebar" />
+   </component>
+ </project>
+\ No newline at end of file
+Index: src/main/java/org/example/studentadminstator/Main.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator;\r\nimport javafx.application.Application;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.Scene;\r\n\r\nimport org.example.studentadminstator.pages.Login;\r\n\r\npublic class Main extends Application {\r\n    @Override\r\n    public void start(Stage stage) {\r\n        try {\r\n           Login login = new Login(stage);\r\n           Scene scene = new Scene(login.getGrid(),1024,900);\r\n           stage.setScene(scene);\r\n           stage.setTitle(\"Student Administrator\");\r\n           stage.show();\r\n        } catch (Exception e) {\r\n            e.printStackTrace(); \r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/Main.java b/src/main/java/org/example/studentadminstator/Main.java
+--- a/src/main/java/org/example/studentadminstator/Main.java	(revision d18ce9f3fe3944b9225544781ddbe878640a407a)
++++ b/src/main/java/org/example/studentadminstator/Main.java	(date 1738589514636)
+@@ -4,13 +4,15 @@
+ import javafx.scene.Scene;
+ 
+ import org.example.studentadminstator.pages.Login;
++import org.example.studentadminstator.pages.StudentPage;
+ 
+ public class Main extends Application {
+     @Override
+     public void start(Stage stage) {
+         try {
+            Login login = new Login(stage);
+-           Scene scene = new Scene(login.getGrid(),1024,900);
++           StudentPage studentPage = new StudentPage(stage);
++           Scene scene = new Scene(studentPage.getGrid(),1024,900);
+            stage.setScene(scene);
+            stage.setTitle("Student Administrator");
+            stage.show();
+Index: src/main/java/org/example/studentadminstator/pages/StudentPage.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Stage;\r\n\r\npublic class StudentPage extends VBox {\r\n       private GridPane grid = new GridPane();\r\n\r\n        StudentPage(Stage primaryStage){\r\n                \r\n        }\r\n\r\n       public GridPane getGrid () {\r\n\r\n\r\n        return grid;\r\n\r\n}\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/StudentPage.java b/src/main/java/org/example/studentadminstator/pages/StudentPage.java
+--- a/src/main/java/org/example/studentadminstator/pages/StudentPage.java	(revision d18ce9f3fe3944b9225544781ddbe878640a407a)
++++ b/src/main/java/org/example/studentadminstator/pages/StudentPage.java	(date 1738590302310)
+@@ -1,20 +1,38 @@
+ package org.example.studentadminstator.pages;
+ 
++import javafx.geometry.Insets;
++import javafx.geometry.Pos;
+ import javafx.scene.layout.GridPane;
+ import javafx.scene.layout.VBox;
+ import javafx.stage.Stage;
++import org.example.studentadminstator.components.CustomTable;
++import org.example.studentadminstator.components.Navbar;
++import org.example.studentadminstator.data.Student;
++import org.example.studentadminstator.data.StudentDB;
+ 
+ public class StudentPage extends VBox {
+-       private GridPane grid = new GridPane();
++       private GridPane gridPane = new GridPane();
++       private Navbar navbar = new Navbar("Student");
++       public StudentPage(Stage primaryStage){
++           gridPane.setVgap(15);
++           gridPane.setHgap(15);
++           gridPane.setPadding(new Insets(10, 10, 10, 10));
++           gridPane.getChildren().add(navbar);
+ 
+-        StudentPage(Stage primaryStage){
++            CustomTable<Student> studentTable = new CustomTable<Student>();
++            studentTable.addColumn("Course", "Course", 50);
++            studentTable.addColumn("Attendance", "Attendance", 50);
++            studentTable.addColumn("Grade", "Grade", 50);
++
++           gridPane.add(studentTable, 0, 0);
++            this.getChildren().add(gridPane);
+                 
+         }
+ 
+        public GridPane getGrid () {
+ 
+ 
+-        return grid;
++        return gridPane;
+ 
+ }
+ 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,245 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport Javafx.event.EventHandler;\r\nimport javafx.scene.control.button;\r\nimport javafx.scene.layout.VBox\r\n\r\npublic class CustomButton extends VBox {\r\n\r\npublic CustomButtontom(EventHandler<ActionEvent> eventHandler,String lapel){\r\n\r\n        this.button=new Button(label);\r\n\r\n        this.button.setonAction(eventHandler);\r\n\r\n        this.getchildren().add(this.button);\r\n\r\n        }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision 0a999ae0af6d8c118655ca4a63dd3ce40d5cca1a)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738458164737)
+@@ -1,17 +1,19 @@
+ package org.example.studentadminstator.components;
+-import Javafx.event.EventHandler;
+-import javafx.scene.control.button;
+-import javafx.scene.layout.VBox
++
++import javafx.event.ActionEvent;
++import javafx.event.EventHandler;
++import javafx.scene.control.Button;
++import javafx.scene.layout.VBox;
+ 
+ public class CustomButton extends VBox {
++ private Button button;
++public CustomButton(EventHandler<ActionEvent> eventHandler, String lapel){
+ 
+-public CustomButtontom(EventHandler<ActionEvent> eventHandler,String lapel){
++        this.button=new Button(lapel);
+ 
+-        this.button=new Button(label);
++        this.button.setOnAction(eventHandler);
+ 
+-        this.button.setonAction(eventHandler);
+-
+-        this.getchildren().add(this.button);
++        this.getChildren().add(this.button);
+ 
+         }
+ 
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision 0a999ae0af6d8c118655ca4a63dd3ce40d5cca1a)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738457875308)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/module-info.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.CustomTable$TestApp.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.CustomTable$TestApp\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 0a999ae0af6d8c118655ca4a63dd3ce40d5cca1a)
++++ b/.idea/workspace.xml	(date 1738458579396)
+@@ -4,11 +4,11 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Fixing Register Page Style and adding validation">
+       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -25,7 +25,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="agaafar" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -55,7 +55,7 @@
+   <component name="MavenImportPreferences">
+     <option name="generalSettings">
+       <MavenGeneralSettings>
+-        <option name="mavenHome" value="Use Maven wrapper" />
++        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
+       </MavenGeneralSettings>
+     </option>
+   </component>
+@@ -68,65 +68,30 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Application.CustomTable$TestApp.executor": "Run",
+-    "Application.Main.executor": "Run",
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "git-widget-placeholder": "main",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement",
+-    "node.js.detected.package.eslint": "true",
+-    "node.js.detected.package.tslint": "true",
+-    "node.js.selected.package.eslint": "(autodetect)",
+-    "node.js.selected.package.tslint": "(autodetect)",
+-    "nodejs_package_manager_path": "npm",
+-    "project.structure.last.edited": "Project",
+-    "project.structure.proportion": "0.0",
+-    "project.structure.side.proportion": "0.0",
+-    "vue.rearranger.settings.migration": "true"
+-  }
+-}]]></component>
+-  <component name="RunManager" selected="Application.CustomTable$TestApp">
+-    <configuration name="CustomTable$TestApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.components.CustomTable$TestApp" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.components.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.Main" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <recent_temporary>
+-      <list>
+-        <item itemvalue="Application.CustomTable$TestApp" />
+-        <item itemvalue="Application.Main" />
+-      </list>
+-    </recent_temporary>
+-  </component>
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement&quot;,
++    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
++    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
++    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
++    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
++    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
++    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
++  }
++}</component>
+   <component name="SharedIndexes">
+     <attachedChunks>
+       <set>
+-        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
++        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189" />
++        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189" />
+       </set>
+     </attachedChunks>
+   </component>
+@@ -149,14 +114,34 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Fixing Register Page Style and adding validation">
++      <option name="closed" value="true" />
++      <created>1738453725657</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738453725657</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+     <option name="version" value="3" />
+   </component>
++  <component name="Vcs.Log.Tabs.Properties">
++    <option name="TAB_STATES">
++      <map>
++        <entry key="MAIN">
++          <value>
++            <State />
++          </value>
++        </entry>
++      </map>
++    </option>
++  </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Fixing Register Page Style and adding validation" />
++    <option name="LAST_COMMIT_MESSAGE" value="Fixing Register Page Style and adding validation" />
+   </component>
+ </project>
+\ No newline at end of file
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	(revision 0a999ae0af6d8c118655ca4a63dd3ce40d5cca1a)
++++ b/.idea/misc.xml	(date 1738458158670)
+@@ -8,7 +8,7 @@
+       </list>
+     </option>
+   </component>
+-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="23 (2)" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18__Changes_.xml
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18__Changes_.xml	(date 1738774142056)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]" date="1738541939075" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/02/2025 02:18 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,63 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomInput.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomInput.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Gaafar&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 19f7bceffd024b8fcc51780c9932be7c4fdfbd62)
++++ b/.idea/workspace.xml	(date 1738450955542)
+@@ -4,11 +4,10 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomInput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomInput.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -104,7 +103,9 @@
+       <option name="presentableId" value="Default" />
+       <updated>1738184163024</updated>
+       <workItem from="1738391672275" duration="1407000" />
+-      <workItem from="1738396273198" duration="1376000" />
++      <workItem from="1738396273198" duration="1620000" />
++      <workItem from="1738443756530" duration="4380000" />
++      <workItem from="1738450467025" duration="486000" />
+     </task>
+     <task id="LOCAL-00001" summary="Adding CustomSelect Component and Creating the Register Page">
+       <option name="closed" value="true" />
+@@ -114,7 +115,15 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Handling empty inputs">
++      <option name="closed" value="true" />
++      <created>1738397712825</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738397712825</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -122,6 +131,7 @@
+   </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Handling empty inputs" />
++    <option name="LAST_COMMIT_MESSAGE" value="Handling empty inputs" />
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,283 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport javafx.event.EventHandler;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.button;\r\n// import javafx.scene.layout.VBox\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.geometry.Insets;\r\n\r\npublic class CustomButton extends VBox {\r\n      private  Button button;\r\n\r\npublic CustomButton(EventHandler<ActionEvent> eventHandler, String label) {\r\n        this.button = new Button(label);\r\n        this.button.setOnAction(eventHandler);\r\n        this.getChildren().add(this.button);\r\n        \r\n        button.setTextFill(AppStyle.textColor);\r\n        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        button.setPrefWidth(100);\r\n        button.setBackground(new Background(new BackgroundFill(AppStyle.colorLight, CornerRadii.EMPTY, Insets.EMPTY)));\r\n        button.setBorder(new Border(new BorderStroke(\r\n            AppStyle.colorBlack,  \r\n            BorderStrokeStyle.SOLID, \r\n            new CornerRadii(10), \r\n            new BorderWidths(2)  \r\n        )));\r\n\r\n      button.setOnMousePressed(e -> button.setScaleX(0.9));\r\n      button.setOnMousePressed(e -> button.setScaleY(0.9));\r\n      button.setOnMouseReleased(e -> button.setScaleX(1.0));\r\n      button.setOnMouseReleased(e -> button.setScaleY(1.0));\r\n\r\n\r\n      }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738522629378)
+@@ -1,11 +1,10 @@
+ package org.example.studentadminstator.components;
++
+ import org.example.studentadminstator.AppStyle;
+ import javafx.event.EventHandler;
+ import javafx.event.ActionEvent;
+ import javafx.scene.control.Button;
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.button;
+-// import javafx.scene.layout.VBox
+ import javafx.scene.text.FontWeight;
+ import javafx.scene.text.Font;
+ import javafx.scene.layout.Background;
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738522577805)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: src/main/java/org/example/studentadminstator/pages/Register.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.TextField;\r\n// import javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.Button;\r\n// import javafx.scene.control.Label;\r\n\r\n// import javafx.scene.control.Alert;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n// import javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\n\r\npublic class Register extends VBox {\r\n    // private String errorUsername = \"\";\r\n    // private String errorPassword = \"\";\r\n    // private String errorCourse = \"\";\r\n    // private Boolean isVisible = false;\r\n    Text header = new Text();\r\n    private GridPane grid = new GridPane();\r\n    private CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\");\r\n    private CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\");\r\n    private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\");\r\n    private CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    private Button loginButton = new Button();\r\n    \r\n    public Register(Stage primaryStage) {\r\n        \r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n\r\n        header.setText(\"Register\");\r\n        header.setFont(AppStyle.font32);\r\n        header.setFill(AppStyle.textColor);\r\n        \r\n        \r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        loginButton.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        loginButton.setPrefWidth(100);\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        \r\n        EventHandler<ActionEvent> handelSubmit = e -> {\r\n            Boolean usernameValid =  usernameInput.getIsValid();\r\n            Boolean passwordValid =  passwordInput.getIsValid();\r\n            Boolean courseValid =  courseInput.getIsValid();\r\n            Boolean genderValid = genderGroup.isValid();\r\n            Boolean jobValid = jobGroup.isValid();\r\n            System.out.println(\"Username valid: \" + usernameValid.toString() + \", Password valid: \" + passwordValid.toString());\r\n            //Register\r\n            if(usernameValid && passwordValid && courseValid && genderValid && jobValid ) {\r\n                System.out.println(\"submitted successful\"+ usernameInput.getInputValue());\r\n            }\r\n        };\r\n        \r\n        loginButton.setOnAction(handelSubmit);\r\n        grid.add(header, 0, 0, 1, 1);\r\n        grid.add(usernameInput, 0, 1, 1, 1);\r\n        grid.add(passwordInput, 0, 2, 1, 1);\r\n        grid.add(courseInput, 0, 3, 1, 1);\r\n        grid.add(jobGroup, 0, 4, 1, 1);\r\n        grid.add(genderGroup, 0, 5, 1, 1);\r\n        grid.add(loginButton, 0, 6, 1, 1);\r\n\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
+--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738536746662)
+@@ -4,12 +4,7 @@
+ import org.example.studentadminstator.components.CustomInput;
+ 
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.TextField;
+-// import javafx.scene.control.PasswordField;
+ import javafx.scene.control.Button;
+-// import javafx.scene.control.Label;
+-
+-// import javafx.scene.control.Alert;
+ import javafx.geometry.Pos;
+ import javafx.scene.layout.GridPane;
+ import javafx.geometry.Insets;
+Index: src/main/java/org/example/studentadminstator/components/Sidebar.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\n\r\npublic class Sidebar {\r\n        \r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/Sidebar.java b/src/main/java/org/example/studentadminstator/components/Sidebar.java
+--- a/src/main/java/org/example/studentadminstator/components/Sidebar.java	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/src/main/java/org/example/studentadminstator/components/Sidebar.java	(date 1738540070830)
+@@ -1,5 +1,7 @@
+ package org.example.studentadminstator.components;
+ 
++import org.example.studentadminstator.AppStyle;
++
+ public class Sidebar {
+-        
++
+ }
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/module-info.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.CustomTable$TestApp.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.CustomTable$TestApp\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/.idea/workspace.xml	(date 1738541415833)
+@@ -4,11 +4,13 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Fixing Register Page Style and adding validation">
+       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -25,7 +27,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="agaafar" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -55,7 +57,7 @@
+   <component name="MavenImportPreferences">
+     <option name="generalSettings">
+       <MavenGeneralSettings>
+-        <option name="mavenHome" value="Use Maven wrapper" />
++        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
+       </MavenGeneralSettings>
+     </option>
+   </component>
+@@ -68,65 +70,30 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Application.CustomTable$TestApp.executor": "Run",
+-    "Application.Main.executor": "Run",
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "git-widget-placeholder": "main",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement",
+-    "node.js.detected.package.eslint": "true",
+-    "node.js.detected.package.tslint": "true",
+-    "node.js.selected.package.eslint": "(autodetect)",
+-    "node.js.selected.package.tslint": "(autodetect)",
+-    "nodejs_package_manager_path": "npm",
+-    "project.structure.last.edited": "Project",
+-    "project.structure.proportion": "0.0",
+-    "project.structure.side.proportion": "0.0",
+-    "vue.rearranger.settings.migration": "true"
+-  }
+-}]]></component>
+-  <component name="RunManager" selected="Application.CustomTable$TestApp">
+-    <configuration name="CustomTable$TestApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.components.CustomTable$TestApp" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.components.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.Main" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <recent_temporary>
+-      <list>
+-        <item itemvalue="Application.CustomTable$TestApp" />
+-        <item itemvalue="Application.Main" />
+-      </list>
+-    </recent_temporary>
+-  </component>
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement&quot;,
++    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
++    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
++    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
++    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
++    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
++    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
++  }
++}</component>
+   <component name="SharedIndexes">
+     <attachedChunks>
+       <set>
+-        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
++        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189" />
++        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189" />
+       </set>
+     </attachedChunks>
+   </component>
+@@ -140,6 +107,8 @@
+       <updated>1738184163024</updated>
+       <workItem from="1738391672275" duration="1407000" />
+       <workItem from="1738396273198" duration="1376000" />
++      <workItem from="1738521768460" duration="738000" />
++      <workItem from="1738536707952" duration="4001000" />
+     </task>
+     <task id="LOCAL-00001" summary="Adding CustomSelect Component and Creating the Register Page">
+       <option name="closed" value="true" />
+@@ -149,14 +118,34 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Fixing Register Page Style and adding validation">
++      <option name="closed" value="true" />
++      <created>1738453725657</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738453725657</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+     <option name="version" value="3" />
+   </component>
++  <component name="Vcs.Log.Tabs.Properties">
++    <option name="TAB_STATES">
++      <map>
++        <entry key="MAIN">
++          <value>
++            <State />
++          </value>
++        </entry>
++      </map>
++    </option>
++  </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Fixing Register Page Style and adding validation" />
++    <option name="LAST_COMMIT_MESSAGE" value="Fixing Register Page Style and adding validation" />
+   </component>
+ </project>
+\ No newline at end of file
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	(revision 71abe989419df8c54f0769f23d640348db5ce97f)
++++ b/.idea/misc.xml	(date 1738522577898)
+@@ -8,7 +8,7 @@
+       </list>
+     </option>
+   </component>
+-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="23 (2)" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,160 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport javafx.event.EventHandler;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.button;\r\n// import javafx.scene.layout.VBox\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.geometry.Insets;\r\n\r\npublic class CustomButton extends VBox {\r\n      private  Button button;\r\n\r\npublic CustomButton(EventHandler<ActionEvent> eventHandler, String label) {\r\n        this.button = new Button(label);\r\n        this.button.setOnAction(eventHandler);\r\n        this.getChildren().add(this.button);\r\n        \r\n        button.setTextFill(AppStyle.textColor);\r\n        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        button.setPrefWidth(100);\r\n        button.setBackground(new Background(new BackgroundFill(AppStyle.colorLight, CornerRadii.EMPTY, Insets.EMPTY)));\r\n        button.setBorder(new Border(new BorderStroke(\r\n            AppStyle.colorBlack,  \r\n            BorderStrokeStyle.SOLID, \r\n            new CornerRadii(10), \r\n            new BorderWidths(2)  \r\n        )));\r\n\r\n      button.setOnMousePressed(e -> button.setScaleX(0.9));\r\n      button.setOnMousePressed(e -> button.setScaleY(0.9));\r\n      button.setOnMouseReleased(e -> button.setScaleX(1.0));\r\n      button.setOnMouseReleased(e -> button.setScaleY(1.0));\r\n\r\n\r\n      }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision f3f1548cdc2dda2fb29a783c96873c54652bf131)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738541777986)
+@@ -1,11 +1,10 @@
+ package org.example.studentadminstator.components;
++
+ import org.example.studentadminstator.AppStyle;
+ import javafx.event.EventHandler;
+ import javafx.event.ActionEvent;
+ import javafx.scene.control.Button;
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.button;
+-// import javafx.scene.layout.VBox
+ import javafx.scene.text.FontWeight;
+ import javafx.scene.text.Font;
+ import javafx.scene.layout.Background;
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision f3f1548cdc2dda2fb29a783c96873c54652bf131)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738541778014)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: src/main/java/org/example/studentadminstator/pages/Register.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.TextField;\r\n// import javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.Button;\r\n// import javafx.scene.control.Label;\r\n\r\n// import javafx.scene.control.Alert;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n// import javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\n\r\npublic class Register extends VBox {\r\n    // private String errorUsername = \"\";\r\n    // private String errorPassword = \"\";\r\n    // private String errorCourse = \"\";\r\n    // private Boolean isVisible = false;\r\n    Text header = new Text();\r\n    private GridPane grid = new GridPane();\r\n    private CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\");\r\n    private CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\");\r\n    private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\");\r\n    private CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    private Button loginButton = new Button();\r\n    \r\n    public Register(Stage primaryStage) {\r\n        \r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n\r\n        header.setText(\"Register\");\r\n        header.setFont(AppStyle.font32);\r\n        header.setFill(AppStyle.textColor);\r\n        \r\n        \r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        loginButton.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        loginButton.setPrefWidth(100);\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        \r\n        EventHandler<ActionEvent> handelSubmit = e -> {\r\n            Boolean usernameValid =  usernameInput.getIsValid();\r\n            Boolean passwordValid =  passwordInput.getIsValid();\r\n            Boolean courseValid =  courseInput.getIsValid();\r\n            Boolean genderValid = genderGroup.isValid();\r\n            Boolean jobValid = jobGroup.isValid();\r\n            System.out.println(\"Username valid: \" + usernameValid.toString() + \", Password valid: \" + passwordValid.toString());\r\n            //Register\r\n            if(usernameValid && passwordValid && courseValid && genderValid && jobValid ) {\r\n                System.out.println(\"submitted successful\"+ usernameInput.getInputValue());\r\n            }\r\n        };\r\n        \r\n        loginButton.setOnAction(handelSubmit);\r\n        grid.add(header, 0, 0, 1, 1);\r\n        grid.add(usernameInput, 0, 1, 1, 1);\r\n        grid.add(passwordInput, 0, 2, 1, 1);\r\n        grid.add(courseInput, 0, 3, 1, 1);\r\n        grid.add(jobGroup, 0, 4, 1, 1);\r\n        grid.add(genderGroup, 0, 5, 1, 1);\r\n        grid.add(loginButton, 0, 6, 1, 1);\r\n\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
+--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision f3f1548cdc2dda2fb29a783c96873c54652bf131)
++++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738541778035)
+@@ -4,12 +4,7 @@
+ import org.example.studentadminstator.components.CustomInput;
+ 
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.TextField;
+-// import javafx.scene.control.PasswordField;
+ import javafx.scene.control.Button;
+-// import javafx.scene.control.Label;
+-
+-// import javafx.scene.control.Alert;
+ import javafx.geometry.Pos;
+ import javafx.scene.layout.GridPane;
+ import javafx.geometry.Insets;
+Index: src/main/java/org/example/studentadminstator/components/Sidebar.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\n\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.control.Label;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\n\r\npublic class Sidebar extends VBox {\r\n    private  Label label;\r\n        public Sidebar (String label,CustomButton... buttons){\r\n            this.label = new Label(label);\r\n            this.label.setStyle(\"-fx-font-weight: bold; -fx-padding: 5;\");\r\n\r\n            this.getChildren().add(this.label);\r\n\r\n            if (buttons != null) {\r\n                for (CustomButton button : buttons) {\r\n                    this.getChildren().add(button);\r\n                    VBox.setMargin(button, new Insets(5, 10, 5, 10));\r\n                }\r\n            }\r\n\r\n            this.setPadding(new Insets(10));\r\n            this.setSpacing(5);\r\n            this.setBackground(AppStyle.background);\r\n        }\r\n        }\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/Sidebar.java b/src/main/java/org/example/studentadminstator/components/Sidebar.java
+--- a/src/main/java/org/example/studentadminstator/components/Sidebar.java	(revision f3f1548cdc2dda2fb29a783c96873c54652bf131)
++++ b/src/main/java/org/example/studentadminstator/components/Sidebar.java	(date 1738541841564)
+@@ -3,6 +3,7 @@
+ import javafx.scene.layout.VBox;
+ import javafx.geometry.Insets;
+ import javafx.scene.control.Label;
++import javafx.scene.text.Font;
+ import org.example.studentadminstator.AppStyle;
+ 
+ 
+@@ -10,7 +11,7 @@
+     private  Label label;
+         public Sidebar (String label,CustomButton... buttons){
+             this.label = new Label(label);
+-            this.label.setStyle("-fx-font-weight: bold; -fx-padding: 5;");
++            this.label.setFont(AppStyle.font14);
+ 
+             this.getChildren().add(this.label);
+ 
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/IbrahimSamir20/student-mangement.git\",\r\n    \"accountId\": \"d337fe82-0e2f-4312-88a8-b9346207c561\"\r\n  },\r\n  \"recentNewPullRequestHead\": {\r\n    \"server\": {\r\n      \"useHttp\": false,\r\n      \"host\": \"github.com\",\r\n      \"port\": null,\r\n      \"suffix\": null\r\n    },\r\n    \"owner\": \"IbrahimSamir20\",\r\n    \"repository\": \"student-mangement\"\r\n  }\r\n}]]></component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.CustomTable$TestApp.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"peter\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Peter/Desktop/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision f3f1548cdc2dda2fb29a783c96873c54652bf131)
++++ b/.idea/workspace.xml	(date 1738541841760)
+@@ -5,9 +5,10 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
+-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -35,22 +36,22 @@
+     &quot;assignee&quot;: &quot;AGaafar7&quot;
+   }
+ }</component>
+-  <component name="GithubPullRequestsUISettings"><![CDATA[{
+-  "selectedUrlAndAccountId": {
+-    "url": "https://github.com/IbrahimSamir20/student-mangement.git",
+-    "accountId": "d337fe82-0e2f-4312-88a8-b9346207c561"
++  <component name="GithubPullRequestsUISettings">{
++  &quot;selectedUrlAndAccountId&quot;: {
++    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,
++    &quot;accountId&quot;: &quot;d337fe82-0e2f-4312-88a8-b9346207c561&quot;
+   },
+-  "recentNewPullRequestHead": {
+-    "server": {
+-      "useHttp": false,
+-      "host": "github.com",
+-      "port": null,
+-      "suffix": null
++  &quot;recentNewPullRequestHead&quot;: {
++    &quot;server&quot;: {
++      &quot;useHttp&quot;: false,
++      &quot;host&quot;: &quot;github.com&quot;,
++      &quot;port&quot;: null,
++      &quot;suffix&quot;: null
+     },
+-    "owner": "IbrahimSamir20",
+-    "repository": "student-mangement"
++    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,
++    &quot;repository&quot;: &quot;student-mangement&quot;
+   }
+-}]]></component>
++}</component>
+   <component name="MavenImportPreferences">
+     <option name="generalSettings">
+       <MavenGeneralSettings>
+@@ -74,7 +75,7 @@
+     "RunOnceActivity.OpenProjectViewOnStart": "true",
+     "RunOnceActivity.ShowReadmeOnStart": "true",
+     "RunOnceActivity.git.unshallow": "true",
+-    "git-widget-placeholder": "peter",
++    "git-widget-placeholder": "main",
+     "kotlin-language-version-configured": "true",
+     "last_opened_file_path": "C:/Users/Peter/Desktop/student-mangement",
+     "node.js.detected.package.eslint": "true",
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,175 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport org.example.studentadminstator.AppStyle;\r\nimport javafx.event.EventHandler;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.button;\r\n// import javafx.scene.layout.VBox\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.geometry.Insets;\r\n\r\npublic class CustomButton extends VBox {\r\n      private  Button button;\r\n\r\npublic CustomButton(EventHandler<ActionEvent> eventHandler, String label) {\r\n        this.button = new Button(label);\r\n        this.button.setOnAction(eventHandler);\r\n        this.getChildren().add(this.button);\r\n        \r\n        button.setTextFill(AppStyle.textColor);\r\n        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        button.setPrefWidth(100);\r\n        button.setBackground(new Background(new BackgroundFill(AppStyle.colorLight, CornerRadii.EMPTY, Insets.EMPTY)));\r\n        button.setBorder(new Border(new BorderStroke(\r\n            AppStyle.colorBlack,  \r\n            BorderStrokeStyle.SOLID, \r\n            new CornerRadii(10), \r\n            new BorderWidths(2)  \r\n        )));\r\n\r\n      button.setOnMousePressed(e -> button.setScaleX(0.9));\r\n      button.setOnMousePressed(e -> button.setScaleY(0.9));\r\n      button.setOnMouseReleased(e -> button.setScaleX(1.0));\r\n      button.setOnMouseReleased(e -> button.setScaleY(1.0));\r\n\r\n\r\n      }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision c52b87427dedf40ca10fb0e46962fac6e5697aa6)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738541931810)
+@@ -1,11 +1,10 @@
+ package org.example.studentadminstator.components;
++
+ import org.example.studentadminstator.AppStyle;
+ import javafx.event.EventHandler;
+ import javafx.event.ActionEvent;
+ import javafx.scene.control.Button;
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.button;
+-// import javafx.scene.layout.VBox
+ import javafx.scene.text.FontWeight;
+ import javafx.scene.text.Font;
+ import javafx.scene.layout.Background;
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision c52b87427dedf40ca10fb0e46962fac6e5697aa6)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738541931832)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/IbrahimSamir20/student-mangement.git\",\r\n    \"accountId\": \"d337fe82-0e2f-4312-88a8-b9346207c561\"\r\n  },\r\n  \"recentNewPullRequestHead\": {\r\n    \"server\": {\r\n      \"useHttp\": false,\r\n      \"host\": \"github.com\",\r\n      \"port\": null,\r\n      \"suffix\": null\r\n    },\r\n    \"owner\": \"IbrahimSamir20\",\r\n    \"repository\": \"student-mangement\"\r\n  }\r\n}]]></component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.CustomTable$TestApp.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"peter\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Peter/Desktop/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision c52b87427dedf40ca10fb0e46962fac6e5697aa6)
++++ b/.idea/workspace.xml	(date 1738542386261)
+@@ -5,9 +5,10 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
+-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Sidebar.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -35,22 +36,22 @@
+     &quot;assignee&quot;: &quot;AGaafar7&quot;
+   }
+ }</component>
+-  <component name="GithubPullRequestsUISettings"><![CDATA[{
+-  "selectedUrlAndAccountId": {
+-    "url": "https://github.com/IbrahimSamir20/student-mangement.git",
+-    "accountId": "d337fe82-0e2f-4312-88a8-b9346207c561"
+-  },
+-  "recentNewPullRequestHead": {
+-    "server": {
+-      "useHttp": false,
+-      "host": "github.com",
+-      "port": null,
+-      "suffix": null
+-    },
+-    "owner": "IbrahimSamir20",
+-    "repository": "student-mangement"
+-  }
+-}]]></component>
++  <component name="GithubPullRequestsUISettings">{
++  &quot;selectedUrlAndAccountId&quot;: {
++    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,
++    &quot;accountId&quot;: &quot;d337fe82-0e2f-4312-88a8-b9346207c561&quot;
++  },
++  &quot;recentNewPullRequestHead&quot;: {
++    &quot;server&quot;: {
++      &quot;useHttp&quot;: false,
++      &quot;host&quot;: &quot;github.com&quot;,
++      &quot;port&quot;: null,
++      &quot;suffix&quot;: null
++    },
++    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,
++    &quot;repository&quot;: &quot;student-mangement&quot;
++  }
++}</component>
+   <component name="MavenImportPreferences">
+     <option name="generalSettings">
+       <MavenGeneralSettings>
+@@ -67,27 +68,27 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Application.CustomTable$TestApp.executor": "Run",
+-    "Application.Main.executor": "Run",
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "git-widget-placeholder": "peter",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "C:/Users/Peter/Desktop/student-mangement",
+-    "node.js.detected.package.eslint": "true",
+-    "node.js.detected.package.tslint": "true",
+-    "node.js.selected.package.eslint": "(autodetect)",
+-    "node.js.selected.package.tslint": "(autodetect)",
+-    "nodejs_package_manager_path": "npm",
+-    "project.structure.last.edited": "Project",
+-    "project.structure.proportion": "0.0",
+-    "project.structure.side.proportion": "0.0",
+-    "vue.rearranger.settings.migration": "true"
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Application.CustomTable$TestApp.executor&quot;: &quot;Run&quot;,
++    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
++    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;C:/Users/Peter/Desktop/student-mangement&quot;,
++    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
++    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
++    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
++    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
++    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
++    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+   }
+-}]]></component>
++}</component>
+   <component name="RunManager" selected="Application.Main">
+     <configuration name="CustomTable$TestApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+       <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.components.CustomTable$TestApp" />
+Index: src/main/java/org/example/studentadminstator/pages/Register.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.TextField;\r\n// import javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.Button;\r\n// import javafx.scene.control.Label;\r\n\r\n// import javafx.scene.control.Alert;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n// import javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\n\r\npublic class Register extends VBox {\r\n    // private String errorUsername = \"\";\r\n    // private String errorPassword = \"\";\r\n    // private String errorCourse = \"\";\r\n    // private Boolean isVisible = false;\r\n    Text header = new Text();\r\n    private GridPane grid = new GridPane();\r\n    private CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\");\r\n    private CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\");\r\n    private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\");\r\n    private CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    private Button loginButton = new Button();\r\n    \r\n    public Register(Stage primaryStage) {\r\n        \r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n\r\n        header.setText(\"Register\");\r\n        header.setFont(AppStyle.font32);\r\n        header.setFill(AppStyle.textColor);\r\n        \r\n        \r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        loginButton.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        loginButton.setPrefWidth(100);\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        \r\n        EventHandler<ActionEvent> handelSubmit = e -> {\r\n            Boolean usernameValid =  usernameInput.getIsValid();\r\n            Boolean passwordValid =  passwordInput.getIsValid();\r\n            Boolean courseValid =  courseInput.getIsValid();\r\n            Boolean genderValid = genderGroup.isValid();\r\n            Boolean jobValid = jobGroup.isValid();\r\n            System.out.println(\"Username valid: \" + usernameValid.toString() + \", Password valid: \" + passwordValid.toString());\r\n            //Register\r\n            if(usernameValid && passwordValid && courseValid && genderValid && jobValid ) {\r\n                System.out.println(\"submitted successful\"+ usernameInput.getInputValue());\r\n            }\r\n        };\r\n        \r\n        loginButton.setOnAction(handelSubmit);\r\n        grid.add(header, 0, 0, 1, 1);\r\n        grid.add(usernameInput, 0, 1, 1, 1);\r\n        grid.add(passwordInput, 0, 2, 1, 1);\r\n        grid.add(courseInput, 0, 3, 1, 1);\r\n        grid.add(jobGroup, 0, 4, 1, 1);\r\n        grid.add(genderGroup, 0, 5, 1, 1);\r\n        grid.add(loginButton, 0, 6, 1, 1);\r\n\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
+--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision c52b87427dedf40ca10fb0e46962fac6e5697aa6)
++++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738541931855)
+@@ -4,12 +4,7 @@
+ import org.example.studentadminstator.components.CustomInput;
+ 
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.TextField;
+-// import javafx.scene.control.PasswordField;
+ import javafx.scene.control.Button;
+-// import javafx.scene.control.Label;
+-
+-// import javafx.scene.control.Alert;
+ import javafx.geometry.Pos;
+ import javafx.scene.layout.GridPane;
+ import javafx.geometry.Insets;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,37 @@
+Index: src/main/java/org/example/studentadminstator/pages/Administer.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>// package org.example.studentadminstator.pages;\r\n\r\n// import javafx.collections.FXCollections;\r\n// import javafx.collections.ObservableList;\r\n// import javafx.geometry.Insets;\r\n// import javafx.scene.Scene;\r\n// import javafx.scene.control.Label;\r\n// import javafx.scene.layout.BorderPane;\r\n// import javafx.scene.layout.VBox;\r\n// import org.example.studentadminstator.components.CustomButton;\r\n// import org.example.studentadminstator.components.CustomTable;\r\n// import org.example.studentadminstator.components.Navbar;\r\n\r\n// import org.example.studentadminstator.components.Sidebar;\r\n// import org.example.studentadminstator.data.Course;\r\n// import org.example.studentadminstator.AppStyle;\r\n\r\n// public class Administer {\r\n//     private BorderPane root;\r\n//     private Scene scene;\r\n\r\n<<<<<<< HEAD\r\n//     public Administer() {\r\n//         root = new BorderPane();\r\n//         root.setStyle(\"-fx-background-color: black;\");\r\n\r\n//         // Navbar navbar = new Navbar();\r\n//         // root.setTop(navbar);\r\n=======\r\n        Navbar navbar = new Navbar();\r\n        root.setTop(navbar);\r\n        //TODO: (Nancy) Check the new SideBar Parameters\r\n        Sidebar sidebar = new Sidebar(\"Dashboard\", new CustomButton(actionEvent -> {},\"Instructor\" ));\r\n        root.setLeft(sidebar);\r\n>>>>>>> af1e66f66227d8f938786853045fa79ee6a7b4a6\r\n\r\n//         Sidebar sidebar = new Sidebar();\r\n//         // root.setLeft(sidebar);\r\n\r\n//         CustomTable<Course> courseTable = new CustomTable<>();\r\n//         courseTable.addColumn(\"Course Name\", \"name\", 400);\r\n//         courseTable.setTableData(getSampleData());\r\n\r\n//         VBox courseContainer = new VBox();\r\n//         courseContainer.setPadding(new Insets(10));\r\n//         courseContainer.setSpacing(10);\r\n\r\n//         Label courseLabel = new Label(\"Course\");\r\n//         courseLabel.setStyle(\"-fx-font-size: 16px; -fx-text-fill: white;\");\r\n\r\n\r\n//         courseContainer.getChildren().addAll(courseLabel,  courseTable);\r\n//         root.setCenter(courseContainer);\r\n\r\n//         // Scene\r\n//         scene = new Scene(root, 800, 600);\r\n//     }\r\n\r\n//     public Scene getScene() {\r\n//         return scene;\r\n//     }\r\n\r\n//     // private ObservableList<Course> getSampleData() {\r\n//     //     return FXCollections.observableArrayList(\r\n//     //             new Course(\"JavaFX Basics\"),\r\n//     //             new Course(\"Advanced Java\"),\r\n//     //             new Course(\"UI/UX Design\")\r\n//     //     );\r\n//     // }\r\n// }\r\n
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Administer.java b/src/main/java/org/example/studentadminstator/pages/Administer.java
+--- a/src/main/java/org/example/studentadminstator/pages/Administer.java	(revision d18ce9f3fe3944b9225544781ddbe878640a407a)
++++ b/src/main/java/org/example/studentadminstator/pages/Administer.java	(date 1738589867420)
+@@ -19,20 +19,20 @@
+ //     private BorderPane root;
+ //     private Scene scene;
+ 
+-<<<<<<< HEAD
++//<<<<<<< HEAD
+ //     public Administer() {
+ //         root = new BorderPane();
+ //         root.setStyle("-fx-background-color: black;");
+ 
+ //         // Navbar navbar = new Navbar();
+ //         // root.setTop(navbar);
+-=======
+-        Navbar navbar = new Navbar();
+-        root.setTop(navbar);
+-        //TODO: (Nancy) Check the new SideBar Parameters
+-        Sidebar sidebar = new Sidebar("Dashboard", new CustomButton(actionEvent -> {},"Instructor" ));
+-        root.setLeft(sidebar);
+->>>>>>> af1e66f66227d8f938786853045fa79ee6a7b4a6
++//=======
++  //      Navbar navbar = new Navbar();
++    //    root.setTop(navbar);
++      //  //TODO: (Nancy) Check the new SideBar Parameters
++        ///Sidebar sidebar = new Sidebar("Dashboard", new CustomButton(actionEvent -> {},"Instructor" ));
++       // root.setLeft(sidebar);
++//>>>>>>> af1e66f66227d8f938786853045fa79ee6a7b4a6
+ 
+ //         Sidebar sidebar = new Sidebar();
+ //         // root.setLeft(sidebar);
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch	(date 1738774142056)
@@ -0,0 +1,85 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setStyle(\"-fx-font-weight: bold;\");\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision 19f7bceffd024b8fcc51780c9932be7c4fdfbd62)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738450970904)
+@@ -14,7 +14,7 @@
+ 
+     public CustomSelect(String groupLabel, String... options) {
+         label = new Label(groupLabel);
+-        label.setStyle("-fx-font-weight: bold;");
++        label.setFont(AppStyle.font18Bold);
+         label.setTextFill(AppStyle.textColor);
+         toggleGroup = new ToggleGroup();
+         HBox optionsBox = new HBox(10);
+@@ -24,6 +24,7 @@
+             RadioButton radioButton = new RadioButton(option);
+             radioButton.setToggleGroup(toggleGroup);
+             radioButton.setTextFill(AppStyle.textColor);
++            radioButton.setFont(AppStyle.font14Bold);
+             optionsBox.getChildren().add(radioButton);
+         }
+ 
+Index: src/main/java/org/example/studentadminstator/pages/Register.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\n\r\nimport javafx.scene.control.Alert;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\n\r\npublic class Register extends VBox {\r\n    private String errorUsername = \"\";\r\n    private String errorPassword = \"\";\r\n    private String errorCourse = \"\";\r\n    private GridPane grid = new GridPane();\r\n    private CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\", errorUsername);\r\n    private CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\",errorPassword);\r\n    private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\",errorCourse);\r\n    private CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    private Button loginButton = new Button();\r\n\r\n    public Register(Stage primaryStage) {\r\n\r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n\r\n\r\n\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        loginButton.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        loginButton.setPrefWidth(100);\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        grid.add(usernameInput, 0, 0, 1, 1);\r\n        grid.add(passwordInput, 0, 1, 1, 1);\r\n        grid.add(courseInput, 0, 2, 1, 1);\r\n        grid.add(jobGroup, 0, 3, 1, 1);\r\n        grid.add(genderGroup, 0, 4, 1, 1);\r\n        grid.add(loginButton, 0, 5, 1, 1);\r\n\r\n        EventHandler<ActionEvent> buttonEvent = e -> {\r\n            if(usernameInput.isValid() && passwordInput.isValid() && courseInput.isValid()){\r\n                //Should Go to the next page\r\n            }else {\r\n                errorUsername = \"Username cannot be empty\";\r\n                errorPassword = \"Password cannot be empty\";\r\n                errorCourse = \"Course cannot be empty\";\r\n                //This is a replacement to error text TODO(IbrahimSamir): Check this\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Empty Field\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Please fill all the fields correctly\");\r\n                alert.showAndWait();\r\n\r\n            }\r\n        };\r\n\r\n        loginButton.setOnAction(buttonEvent);\r\n\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
+--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision 19f7bceffd024b8fcc51780c9932be7c4fdfbd62)
++++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738451112016)
+@@ -61,15 +61,6 @@
+             if(usernameInput.isValid() && passwordInput.isValid() && courseInput.isValid()){
+                 //Should Go to the next page
+             }else {
+-                errorUsername = "Username cannot be empty";
+-                errorPassword = "Password cannot be empty";
+-                errorCourse = "Course cannot be empty";
+-                //This is a replacement to error text TODO(IbrahimSamir): Check this
+-                Alert alert = new Alert(Alert.AlertType.ERROR);
+-                alert.setTitle("Empty Field");
+-                alert.setHeaderText(null);
+-                alert.setContentText("Please fill all the fields correctly");
+-                alert.showAndWait();
+ 
+             }
+         };
+Index: src/main/java/org/example/studentadminstator/AppStyle.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator;\r\n\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.BackgroundImage;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.layout.BackgroundRepeat;\r\nimport javafx.scene.layout.BackgroundSize;\r\nimport javafx.scene.layout.BackgroundPosition;\r\nimport javafx.scene.image.Image;\r\n\r\npublic class AppStyle{\r\n    public static final Font font18 = new Font(\"Arial\", 18);\r\n    public static final Font font24 = new Font(\"Arial\", 24);\r\n    public static final Font font32 = new Font(\"Arial\", 32);\r\n    \r\n    public static final Color colorBlack = Color.BLACK;\r\n    public static final Color textColor = Color.WHITE;\r\n    public static final Color errorColor = Color.RED;\r\n    \r\n    public static final Border border = new Border(new BorderStroke(colorBlack, BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT));\r\n    public static final Background background = new Background(new BackgroundFill(Color.BLACK, CornerRadii.EMPTY, Insets.EMPTY));\r\n    public static final BackgroundImage backgroundImage = new BackgroundImage(\r\n        new Image(\"file:src/main/resources/org/example/studentadminstator/images/background.jpg\"),\r\n        BackgroundRepeat.NO_REPEAT,\r\n        BackgroundRepeat.NO_REPEAT,\r\n        BackgroundPosition.CENTER,\r\n        BackgroundSize.DEFAULT\r\n    );\r\n    \r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/AppStyle.java b/src/main/java/org/example/studentadminstator/AppStyle.java
+--- a/src/main/java/org/example/studentadminstator/AppStyle.java	(revision 19f7bceffd024b8fcc51780c9932be7c4fdfbd62)
++++ b/src/main/java/org/example/studentadminstator/AppStyle.java	(date 1738450955487)
+@@ -15,15 +15,21 @@
+ import javafx.scene.layout.BackgroundSize;
+ import javafx.scene.layout.BackgroundPosition;
+ import javafx.scene.image.Image;
++import javafx.scene.text.FontWeight;
+ 
+ public class AppStyle{
+     public static final Font font18 = new Font("Arial", 18);
++    public static final Font font18Bold = Font.font("Arial", FontWeight.BOLD, 18); // Bold 18pt font
++    public static final Font font14 = Font.font("Arial", 14); // Regular 14pt font
++    public static final Font font14Bold = Font.font("Arial", FontWeight.BOLD, 14); // Bold 14pt font
++
+     public static final Font font24 = new Font("Arial", 24);
+     public static final Font font32 = new Font("Arial", 32);
+     
+     public static final Color colorBlack = Color.BLACK;
+     public static final Color textColor = Color.WHITE;
+     public static final Color errorColor = Color.RED;
++    public static final FontWeight textBold = FontWeight.BOLD;
+     
+     public static final Border border = new Border(new BorderStroke(colorBlack, BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT));
+     public static final Background background = new Background(new BackgroundFill(Color.BLACK, CornerRadii.EMPTY, Insets.EMPTY));
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,122 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\n\r\npublic class CustomButton {\r\n        \r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision c4155a8f42a54087caad841d02fbf0bbc3b7dd43)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738455564397)
+@@ -1,5 +1,17 @@
+ package org.example.studentadminstator.components;
+ 
+-public class CustomButton {
+-        
++import javafx.event.ActionEvent;
++import javafx.event.EventHandler;
++import javafx.scene.control.Button;
++import javafx.scene.layout.VBox;
++
++public class CustomButton extends VBox {
++    private Button button;
++
++    public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {
++    this.button = new Button(label);
++    this.button.setOnAction(eventHandler);
++
++    this.getChildren().add(this.button);
++    }
+ }
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision c4155a8f42a54087caad841d02fbf0bbc3b7dd43)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738454434231)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision c4155a8f42a54087caad841d02fbf0bbc3b7dd43)
++++ b/.idea/workspace.xml	(date 1738456640183)
+@@ -4,13 +4,10 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Fixing Register Page Style and adding validation">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -27,7 +24,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="agaafar" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -116,14 +113,34 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Fixing Register Page Style and adding validation">
++      <option name="closed" value="true" />
++      <created>1738453725657</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738453725657</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+     <option name="version" value="3" />
+   </component>
++  <component name="Vcs.Log.Tabs.Properties">
++    <option name="TAB_STATES">
++      <map>
++        <entry key="MAIN">
++          <value>
++            <State />
++          </value>
++        </entry>
++      </map>
++    </option>
++  </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Fixing Register Page Style and adding validation" />
++    <option name="LAST_COMMIT_MESSAGE" value="Fixing Register Page Style and adding validation" />
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,121 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\n\r\npublic class CustomButton extends Vbox {\r\n        private Button;\r\npublic CustomButtontom(EventHandler<ActionEvent> eventHandler,String lapel){\r\n\r\n        this.button=new Button(label);\r\n\r\n        this.button.setonAction(eventHandler);\r\n\r\n        this.getchildren().add(this.button);\r\n\r\n        }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision b7b151f1ad58e54fd173c2e21916cf3508700cad)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738457377165)
+@@ -1,16 +1,5 @@
+ package org.example.studentadminstator.components;
+ 
+-public class CustomButton extends Vbox {
+-        private Button;
+-public CustomButtontom(EventHandler<ActionEvent> eventHandler,String lapel){
+-
+-        this.button=new Button(label);
+-
+-        this.button.setonAction(eventHandler);
+-
+-        this.getchildren().add(this.button);
+-
+-        }
+-
+-
++public class CustomButton {
++        
+ }
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision b7b151f1ad58e54fd173c2e21916cf3508700cad)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738457377215)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision b7b151f1ad58e54fd173c2e21916cf3508700cad)
++++ b/.idea/workspace.xml	(date 1738457377235)
+@@ -4,13 +4,10 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Fixing Register Page Style and adding validation">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/Main.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -27,7 +24,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="agaafar" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -116,14 +113,34 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Fixing Register Page Style and adding validation">
++      <option name="closed" value="true" />
++      <created>1738453725657</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738453725657</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+     <option name="version" value="3" />
+   </component>
++  <component name="Vcs.Log.Tabs.Properties">
++    <option name="TAB_STATES">
++      <map>
++        <entry key="MAIN">
++          <value>
++            <State />
++          </value>
++        </entry>
++      </map>
++    </option>
++  </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Fixing Register Page Style and adding validation" />
++    <option name="LAST_COMMIT_MESSAGE" value="Fixing Register Page Style and adding validation" />
+   </component>
+ </project>
+\ No newline at end of file
Index: src/main/java/org/example/studentadminstator/components/CustomPopUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/studentadminstator/components/CustomPopUp.java b/src/main/java/org/example/studentadminstator/components/CustomPopUp.java
new file mode 100644
--- /dev/null	(date 1738774142071)
+++ b/src/main/java/org/example/studentadminstator/components/CustomPopUp.java	(date 1738774142071)
@@ -0,0 +1,82 @@
+package org.example.studentadminstator.components;
+import javafx.geometry.Insets;
+import javafx.geometry.Pos;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.scene.layout.VBox;
+import javafx.stage.Modality;
+import javafx.stage.Stage;
+import org.example.studentadminstator.AppData;
+import org.example.studentadminstator.data.Instructor;
+import org.example.studentadminstator.data.Student;
+
+public class CustomPopUp<T> extends Stage {
+
+    private String name;
+    private Navbar navbar;
+    private AppData appData;
+    private T data;
+    public CustomPopUp(Stage primaryStage,String name,T data, Navbar navbar, AppData appData) {
+        this.name = name;
+        this.data = data;
+        this.navbar = navbar;
+        this.appData = appData;
+
+        initModality(Modality.APPLICATION_MODAL);
+        initOwner(primaryStage);
+        setTitle("Edit Name");
+
+        TextField nameField = new TextField(name);
+        Button saveButton = new Button("Save");
+        Button cancelButton = new Button("Cancel");
+
+        saveButton.setOnAction(e -> {
+            String newName = nameField.getText();
+            if (!newName.isEmpty()) {
+                nameField.setText(newName);
+                //To Handle If the edit is from instructor or from student
+                if (data instanceof Student student) {
+                    student.setUsername(newName);
+                    student.setName(newName);
+                    appData.getStudentDB().updateStudentWithoutIndex(student);
+                    appData.getUsersDB().fetchOneUser(name).setUsername(newName);
+                    if (navbar != null) {
+                        navbar.updateStudentName(newName);
+                    } else {
+                        System.err.println("Navbar is null. Cannot update name.");
+                    }
+
+                } else if (data instanceof Instructor instructor) {
+                    instructor.setName(newName);
+                    instructor.setUsername(newName);
+                    appData.getInstructorDB().updateInstructorWithoutIndex(instructor);
+                    appData.getUsersDB().fetchOneUser(name).setUsername(newName);
+                    if (navbar != null) {
+                        navbar.updateStudentName(newName);
+                    } else {
+                        System.err.println("Navbar is null. Cannot update name.");
+                    }
+
+                }
+
+
+                close();
+            } else {
+                Alert alert = new Alert(Alert.AlertType.ERROR, "Name cannot be empty.");
+                alert.showAndWait();
+            }
+        });
+
+        cancelButton.setOnAction(e -> close());
+
+        VBox popupContent = new VBox(10, nameField, saveButton, cancelButton);
+        popupContent.setPadding(new Insets(10));
+        popupContent.setAlignment(Pos.CENTER);
+
+        setScene(new Scene(popupContent));
+    }
+
+    public void showAndWait() {
+        super.showAndWait();
+    }
+}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,112 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setStyle(\"-fx-font-weight: bold;\");\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision 711301a4f64fbe000fac6115ac598cc1c2754a82)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738451118176)
+@@ -14,7 +14,7 @@
+ 
+     public CustomSelect(String groupLabel, String... options) {
+         label = new Label(groupLabel);
+-        label.setStyle("-fx-font-weight: bold;");
++        label.setFont(AppStyle.font18Bold);
+         label.setTextFill(AppStyle.textColor);
+         toggleGroup = new ToggleGroup();
+         HBox optionsBox = new HBox(10);
+@@ -24,6 +24,7 @@
+             RadioButton radioButton = new RadioButton(option);
+             radioButton.setToggleGroup(toggleGroup);
+             radioButton.setTextFill(AppStyle.textColor);
++            radioButton.setFont(AppStyle.font14Bold);
+             optionsBox.getChildren().add(radioButton);
+         }
+ 
+Index: src/main/java/org/example/studentadminstator/pages/Register.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.pages;\r\n\r\nimport org.example.studentadminstator.AppStyle;\r\nimport org.example.studentadminstator.components.CustomInput;\r\n\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\n\r\nimport javafx.scene.control.Alert;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.geometry.Insets;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\n//use latter for controller\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport org.example.studentadminstator.components.CustomSelect;\r\n\r\npublic class Register extends VBox {\r\n    private String errorUsername = \"\";\r\n    private String errorPassword = \"\";\r\n    private String errorCourse = \"\";\r\n    private Boolean isVisible = false;\r\n    private GridPane grid = new GridPane();\r\n    private CustomInput usernameInput = new CustomInput(\"Enter your username\", \"Username\", errorUsername,isVisible);\r\n    private CustomInput passwordInput = new CustomInput(\"Enter Password\",\"Password\",errorPassword,isVisible);\r\n    private CustomInput courseInput = new CustomInput(\"Enter Course\",\"Course\",errorCourse,isVisible);\r\n    private CustomSelect jobGroup = new CustomSelect(\"Job:\", \"Student\", \"Instructor\");\r\n    private CustomSelect genderGroup = new CustomSelect(\"Gender\", \"Male\", \"Female\");\r\n    private Button loginButton = new Button();\r\n\r\n    public Register(Stage primaryStage) {\r\n\r\n        grid.setVgap(15);\r\n        grid.setHgap(15);\r\n        grid.setAlignment(Pos.CENTER);\r\n        grid.setPadding(new Insets(10, 10, 10, 10));\r\n        Background background = new Background(AppStyle.backgroundImage);\r\n        grid.setBackground(background);\r\n\r\n\r\n\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        loginButton.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        loginButton.setPrefWidth(100);\r\n        loginButton.setTextFill(AppStyle.textColor);\r\n        grid.add(usernameInput, 0, 0, 1, 1);\r\n        grid.add(passwordInput, 0, 1, 1, 1);\r\n        grid.add(courseInput, 0, 2, 1, 1);\r\n        grid.add(jobGroup, 0, 3, 1, 1);\r\n        grid.add(genderGroup, 0, 4, 1, 1);\r\n        grid.add(loginButton, 0, 5, 1, 1);\r\n\r\n        EventHandler<ActionEvent> any = e -> {\r\n            // Your code here\r\n        };\r\n\r\n        loginButton.setOnAction(any);\r\n\r\n    }\r\n    public GridPane getGrid(){\r\n        return grid;\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/pages/Register.java b/src/main/java/org/example/studentadminstator/pages/Register.java
+--- a/src/main/java/org/example/studentadminstator/pages/Register.java	(revision 711301a4f64fbe000fac6115ac598cc1c2754a82)
++++ b/src/main/java/org/example/studentadminstator/pages/Register.java	(date 1738451221814)
+@@ -27,11 +27,11 @@
+     private String errorUsername = "";
+     private String errorPassword = "";
+     private String errorCourse = "";
+-    private Boolean isVisible = false;
+     private GridPane grid = new GridPane();
++    private Boolean isVisible = false;
+     private CustomInput usernameInput = new CustomInput("Enter your username", "Username", errorUsername,isVisible);
+-    private CustomInput passwordInput = new CustomInput("Enter Password","Password",errorPassword,isVisible);
+-    private CustomInput courseInput = new CustomInput("Enter Course","Course",errorCourse,isVisible);
++    private CustomInput passwordInput = new CustomInput("Enter Password","Password",errorPassword, isVisible);
++    private CustomInput courseInput = new CustomInput("Enter Course","Course",errorCourse, isVisible);
+     private CustomSelect jobGroup = new CustomSelect("Job:", "Student", "Instructor");
+     private CustomSelect genderGroup = new CustomSelect("Gender", "Male", "Female");
+     private Button loginButton = new Button();
+@@ -58,11 +58,24 @@
+         grid.add(genderGroup, 0, 4, 1, 1);
+         grid.add(loginButton, 0, 5, 1, 1);
+ 
+-        EventHandler<ActionEvent> any = e -> {
+-            // Your code here
++        EventHandler<ActionEvent> buttonEvent = e -> {
++            if(usernameInput.isValid() && passwordInput.isValid() && courseInput.isValid()){
++                //Should Go to the next page
++            }else {
++                errorUsername = "Username cannot be empty";
++                errorPassword = "Password cannot be empty";
++                errorCourse = "Course cannot be empty";
++                //This is a replacement to error text TODO(IbrahimSamir): Check this
++                Alert alert = new Alert(Alert.AlertType.ERROR);
++                alert.setTitle("Empty Field");
++                alert.setHeaderText(null);
++                alert.setContentText("Please fill all the fields correctly");
++                alert.showAndWait();
++
++            }
+         };
+ 
+-        loginButton.setOnAction(any);
++        loginButton.setOnAction(buttonEvent);
+ 
+     }
+     public GridPane getGrid(){
+Index: src/main/java/org/example/studentadminstator/AppStyle.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator;\r\n\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.layout.Border;\r\nimport javafx.scene.layout.BorderStroke;\r\nimport javafx.scene.layout.BorderStrokeStyle;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.scene.layout.BorderWidths;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.BackgroundImage;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.layout.BackgroundRepeat;\r\nimport javafx.scene.layout.BackgroundSize;\r\nimport javafx.scene.layout.BackgroundPosition;\r\nimport javafx.scene.image.Image;\r\n\r\npublic class AppStyle{\r\n    public static final Font font18 = new Font(\"Arial\", 18);\r\n    public static final Font font24 = new Font(\"Arial\", 24);\r\n    public static final Font font32 = new Font(\"Arial\", 32);\r\n    \r\n    public static final Color colorBlack = Color.BLACK;\r\n    public static final Color textColor = Color.WHITE;\r\n    public static final Color errorColor = Color.RED;\r\n    \r\n    public static final Border border = new Border(new BorderStroke(colorBlack, BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT));\r\n    public static final Background background = new Background(new BackgroundFill(Color.BLACK, CornerRadii.EMPTY, Insets.EMPTY));\r\n    public static final BackgroundImage backgroundImage = new BackgroundImage(\r\n        new Image(\"file:src/main/resources/org/example/studentadminstator/images/background.jpg\"),\r\n        BackgroundRepeat.NO_REPEAT,\r\n        BackgroundRepeat.NO_REPEAT,\r\n        BackgroundPosition.CENTER,\r\n        BackgroundSize.DEFAULT\r\n    );\r\n    \r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/AppStyle.java b/src/main/java/org/example/studentadminstator/AppStyle.java
+--- a/src/main/java/org/example/studentadminstator/AppStyle.java	(revision 711301a4f64fbe000fac6115ac598cc1c2754a82)
++++ b/src/main/java/org/example/studentadminstator/AppStyle.java	(date 1738451146958)
+@@ -15,15 +15,21 @@
+ import javafx.scene.layout.BackgroundSize;
+ import javafx.scene.layout.BackgroundPosition;
+ import javafx.scene.image.Image;
++import javafx.scene.text.FontWeight;
+ 
+ public class AppStyle{
+     public static final Font font18 = new Font("Arial", 18);
++    public static final Font font18Bold = Font.font("Arial", FontWeight.BOLD, 18); // Bold 18pt font
++    public static final Font font14 = Font.font("Arial", 14); // Regular 14pt font
++    public static final Font font14Bold = Font.font("Arial", FontWeight.BOLD, 14); // Bold 14pt font
++
+     public static final Font font24 = new Font("Arial", 24);
+     public static final Font font32 = new Font("Arial", 32);
+     
+     public static final Color colorBlack = Color.BLACK;
+     public static final Color textColor = Color.WHITE;
+     public static final Color errorColor = Color.RED;
++    public static final FontWeight textBold = FontWeight.BOLD;
+     
+     public static final Border border = new Border(new BorderStroke(colorBlack, BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT));
+     public static final Background background = new Background(new BackgroundFill(Color.BLACK, CornerRadii.EMPTY, Insets.EMPTY));
Index: .idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1738774142056)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch	(date 1738774142056)
@@ -0,0 +1,265 @@
+Index: src/main/java/org/example/studentadminstator/components/CustomButton.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport org.example.studentadminstator.AppStyle;;\r\nimport javafx.event.EventHandler;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.VBox;\r\n// import javafx.scene.control.button;\r\n// import javafx.scene.layout.VBox\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Font;\r\n\r\npublic class CustomButton extends VBox {\r\n      private  Button button;\r\n\r\npublic CustomButton(EventHandler<ActionEvent> eventHandler, String label) {\r\n        this.button = new Button(label);\r\n        this.button.setOnAction(eventHandler);\r\n        this.getChildren().add(this.button);\r\n        \r\n        button.setTextFill(AppStyle.textColor);\r\n        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));\r\n        button.setPrefWidth(100);\r\n        button.setFill(AppStyle.colorBlack );\r\n\r\n      button.setOnMousePressed(e -> button.setScaleX(0.9));\r\n      button.setOnMousePressed(e -> button.setScaleY(0.9));\r\n      button.setOnMouseReleased(e -> button.setScaleX(1.0));\r\n      button.setOnMouseReleased(e -> button.setScaleY(1.0));\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomButton.java b/src/main/java/org/example/studentadminstator/components/CustomButton.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomButton.java	(revision 26a00e802606e54bdfc59a351387c37e6fe5064e)
++++ b/src/main/java/org/example/studentadminstator/components/CustomButton.java	(date 1738460230077)
+@@ -1,31 +1,30 @@
+ package org.example.studentadminstator.components;
+-import org.example.studentadminstator.AppStyle;;
++import org.example.studentadminstator.AppStyle;
+ import javafx.event.EventHandler;
+ import javafx.event.ActionEvent;
+ import javafx.scene.control.Button;
+ import javafx.scene.layout.VBox;
+-// import javafx.scene.control.button;
+-// import javafx.scene.layout.VBox
+ import javafx.scene.text.FontWeight;
+ import javafx.scene.text.Font;
+ 
+ public class CustomButton extends VBox {
+-      private  Button button;
++        private Button button;
+ 
+-public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {
+-        this.button = new Button(label);
+-        this.button.setOnAction(eventHandler);
+-        this.getChildren().add(this.button);
+-        
+-        button.setTextFill(AppStyle.textColor);
+-        button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));
+-        button.setPrefWidth(100);
+-        button.setFill(AppStyle.colorBlack );
++        public CustomButton(EventHandler<ActionEvent> eventHandler, String label) {
++                this.button = new Button(label);
++                this.button.setOnAction(eventHandler);
++                this.getChildren().add(this.button);
++
++                button.setTextFill(AppStyle.textColor);
++                button.setFont(Font.font(AppStyle.font18.getFamily(), FontWeight.BOLD, AppStyle.font18.getSize()));
++                button.setPrefWidth(100);
++                button.setTextFill(AppStyle.colorBlack);
+ 
+-      button.setOnMousePressed(e -> button.setScaleX(0.9));
+-      button.setOnMousePressed(e -> button.setScaleY(0.9));
+-      button.setOnMouseReleased(e -> button.setScaleX(1.0));
+-      button.setOnMouseReleased(e -> button.setScaleY(1.0));
++                button.setOnMousePressed(e -> button.setScaleX(0.9));
++                button.setOnMousePressed(e -> button.setScaleY(0.9));
++                button.setOnMouseReleased(e -> button.setScaleX(1.0));
++                button.setOnMouseReleased(e -> button.setScaleY(1.0));
+ 
+ 
++        }
+ }
+Index: src/main/java/org/example/studentadminstator/components/CustomSelect.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package org.example.studentadminstator.components;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport org.example.studentadminstator.AppStyle;\r\n\r\npublic class CustomSelect extends VBox{\r\n    private Label label;\r\n    private ToggleGroup toggleGroup;\r\n    private Label errorMessage;\r\n\r\n    public CustomSelect(String groupLabel, String... options) {\r\n        label = new Label(groupLabel);\r\n        label.setFont(AppStyle.font18Bold);\r\n        label.setTextFill(AppStyle.textColor);\r\n        toggleGroup = new ToggleGroup();\r\n        HBox optionsBox = new HBox(10);\r\n        optionsBox.setAlignment(Pos.CENTER_LEFT);\r\n\r\n        for (String option : options) {\r\n            RadioButton radioButton = new RadioButton(option);\r\n            radioButton.setToggleGroup(toggleGroup);\r\n            radioButton.setTextFill(AppStyle.textColor);\r\n            radioButton.setFont(AppStyle.font14Bold);\r\n            optionsBox.getChildren().add(radioButton);\r\n        }\r\n        errorMessage = new Label(\"You must select an option.\");\r\n        errorMessage.setTextFill(AppStyle.errorColor);\r\n        errorMessage.setVisible(false);\r\n        errorMessage.setFont(AppStyle.font14);\r\n        toggleGroup.selectedToggleProperty().addListener((obs, oldVal, newVal) -> {\r\n            if(newVal != null) {\r\n                clearErrorMessage();\r\n            }else {\r\n                setErrorMessage();\r\n            }\r\n        });\r\n        setSpacing(5);\r\n        setPadding(new Insets(10));\r\n        getChildren().addAll(label, optionsBox, errorMessage);\r\n    }\r\n\r\n    public String getSelectedOption() {\r\n        RadioButton selectedRadioButton = (RadioButton) toggleGroup.getSelectedToggle();\r\n        return (selectedRadioButton != null) ? selectedRadioButton.getText() : null;\r\n    }\r\n\r\n    public void setSelectedOption(String option) {\r\n        for (javafx.scene.Node node : ((HBox)getChildren().get(1)).getChildren()) {\r\n            RadioButton radioButton = (RadioButton) node;\r\n            if (radioButton.getText().equals(option)) {\r\n                radioButton.setSelected(true);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Label getLabel() {\r\n        return label;\r\n    }\r\n    //Add Indication to show that he must select the option\r\n    public Boolean isValid() {\r\n        boolean isValid = toggleGroup.getSelectedToggle() != null;\r\n        errorMessage.setVisible(!isValid);\r\n        return isValid;\r\n    }\r\n    public void setErrorMessage(){\r\n        this.errorMessage.setVisible(true);\r\n    }\r\n\r\n    public void clearErrorMessage(){\r\n        this.errorMessage.setText(\"\");\r\n        this.errorMessage.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/org/example/studentadminstator/components/CustomSelect.java b/src/main/java/org/example/studentadminstator/components/CustomSelect.java
+--- a/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(revision 26a00e802606e54bdfc59a351387c37e6fe5064e)
++++ b/src/main/java/org/example/studentadminstator/components/CustomSelect.java	(date 1738460005670)
+@@ -62,7 +62,7 @@
+     public Label getLabel() {
+         return label;
+     }
+-    //Add Indication to show that he must select the option
++
+     public Boolean isValid() {
+         boolean isValid = toggleGroup.getSelectedToggle() != null;
+         errorMessage.setVisible(!isValid);
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/module-info.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.CustomTable$TestApp.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.0\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.CustomTable$TestApp\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff592a29-59fd-4dbb-8073-d2285cc47f1a\" name=\"Changes\" comment=\"\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 26a00e802606e54bdfc59a351387c37e6fe5064e)
++++ b/.idea/workspace.xml	(date 1738460006003)
+@@ -4,11 +4,11 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Adding CustomSelect Component and Creating the Register Page">
++    <list default="true" id="ff592a29-59fd-4dbb-8073-d2285cc47f1a" name="Changes" comment="Fixing Register Page Style and adding validation">
+       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomSelect.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -25,7 +25,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="main" />
++        <entry key="$PROJECT_DIR$" value="agaafar" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -55,7 +55,7 @@
+   <component name="MavenImportPreferences">
+     <option name="generalSettings">
+       <MavenGeneralSettings>
+-        <option name="mavenHome" value="Use Maven wrapper" />
++        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
+       </MavenGeneralSettings>
+     </option>
+   </component>
+@@ -68,65 +68,30 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Application.CustomTable$TestApp.executor": "Run",
+-    "Application.Main.executor": "Run",
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "git-widget-placeholder": "main",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement",
+-    "node.js.detected.package.eslint": "true",
+-    "node.js.detected.package.tslint": "true",
+-    "node.js.selected.package.eslint": "(autodetect)",
+-    "node.js.selected.package.tslint": "(autodetect)",
+-    "nodejs_package_manager_path": "npm",
+-    "project.structure.last.edited": "Project",
+-    "project.structure.proportion": "0.0",
+-    "project.structure.side.proportion": "0.0",
+-    "vue.rearranger.settings.migration": "true"
+-  }
+-}]]></component>
+-  <component name="RunManager" selected="Application.CustomTable$TestApp">
+-    <configuration name="CustomTable$TestApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.components.CustomTable$TestApp" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.components.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="org.example.studentadminstator.Main" />
+-      <module name="student-adminstator" />
+-      <extension name="coverage">
+-        <pattern>
+-          <option name="PATTERN" value="org.example.studentadminstator.*" />
+-          <option name="ENABLED" value="true" />
+-        </pattern>
+-      </extension>
+-      <method v="2">
+-        <option name="Make" enabled="true" />
+-      </method>
+-    </configuration>
+-    <recent_temporary>
+-      <list>
+-        <item itemvalue="Application.CustomTable$TestApp" />
+-        <item itemvalue="Application.Main" />
+-      </list>
+-    </recent_temporary>
+-  </component>
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;D:/Agaaf/Courses/DEPI/SoftwareTesting/Projects/Application/FinalRelease/student-mangement&quot;,
++    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
++    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
++    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
++    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
++    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
++    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
++    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
++    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
++    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
++  }
++}</component>
+   <component name="SharedIndexes">
+     <attachedChunks>
+       <set>
+-        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
++        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189" />
++        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189" />
+       </set>
+     </attachedChunks>
+   </component>
+@@ -149,14 +114,34 @@
+       <option name="project" value="LOCAL" />
+       <updated>1738392807699</updated>
+     </task>
+-    <option name="localTasksCounter" value="2" />
++    <task id="LOCAL-00002" summary="Fixing Register Page Style and adding validation">
++      <option name="closed" value="true" />
++      <created>1738453725657</created>
++      <option name="number" value="00002" />
++      <option name="presentableId" value="LOCAL-00002" />
++      <option name="project" value="LOCAL" />
++      <updated>1738453725657</updated>
++    </task>
++    <option name="localTasksCounter" value="3" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+     <option name="version" value="3" />
+   </component>
++  <component name="Vcs.Log.Tabs.Properties">
++    <option name="TAB_STATES">
++      <map>
++        <entry key="MAIN">
++          <value>
++            <State />
++          </value>
++        </entry>
++      </map>
++    </option>
++  </component>
+   <component name="VcsManagerConfiguration">
+     <MESSAGE value="Adding CustomSelect Component and Creating the Register Page" />
+-    <option name="LAST_COMMIT_MESSAGE" value="Adding CustomSelect Component and Creating the Register Page" />
++    <MESSAGE value="Fixing Register Page Style and adding validation" />
++    <option name="LAST_COMMIT_MESSAGE" value="Fixing Register Page Style and adding validation" />
+   </component>
+ </project>
+\ No newline at end of file
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	(revision 26a00e802606e54bdfc59a351387c37e6fe5064e)
++++ b/.idea/misc.xml	(date 1738460006451)
+@@ -8,7 +8,7 @@
+       </list>
+     </option>
+   </component>
+-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="23 (2)" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7dc0a360-3e0f-4273-b965-25f98e1520f8\" name=\"Changes\" comment=\"Adding hard coded users\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;AGaafar7&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,\r\n    &quot;accountId&quot;: &quot;833215d9-c580-4e4a-9708-71a73fc82ac9&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;IbrahimSamir20&quot;,\r\n    &quot;repository&quot;: &quot;student-mangement&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sJqjP3ahX64quH3mXpd0F8csZ0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"CustomTable$TestApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.components.CustomTable$TestApp\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.components.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.studentadminstator.Main\" />\r\n      <module name=\"student-adminstator\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.studentadminstator.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.CustomTable$TestApp\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7dc0a360-3e0f-4273-b965-25f98e1520f8\" name=\"Changes\" comment=\"Edited NavBar\" />\r\n      <created>1738184163024</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738184163024</updated>\r\n      <workItem from=\"1738391672275\" duration=\"1407000\" />\r\n      <workItem from=\"1738396273198\" duration=\"1376000\" />\r\n      <workItem from=\"1738607229942\" duration=\"4012000\" />\r\n      <workItem from=\"1738615606859\" duration=\"746000\" />\r\n      <workItem from=\"1738623789213\" duration=\"174000\" />\r\n      <workItem from=\"1738615606859\" duration=\"10216000\" />\r\n      <workItem from=\"1738627894712\" duration=\"1512000\" />\r\n      <workItem from=\"1738630037722\" duration=\"2775000\" />\r\n      <workItem from=\"1738641617122\" duration=\"3062000\" />\r\n      <workItem from=\"1738644710116\" duration=\"118000\" />\r\n      <workItem from=\"1738670349186\" duration=\"189000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adding CustomSelect Component and Creating the Register Page\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738392807699</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738392807699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Editing Register\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738605099500</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738605099500</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Adding Student\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738608270761</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738608270761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"StudentPage Fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738609490793</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738609490793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"StudentPage Fixed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738610853747</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738610853748</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Adding InstructorPage\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738616515994</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738616515994</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Adding Back Button Functionality\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738635150973</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738635150974</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Edited NavBar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738637698506</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738637698506</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Fixing Files and adding custom tableview with its data showing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738644669066</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738644669066</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Adding hard coded users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738670487292</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738670487292</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Adding hard coded users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738679223000</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738679223000</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Adding hard coded users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738679228797</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738679228797</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Adding hard coded users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738679230129</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738679230129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Adding hard coded users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738679231439</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738679231439</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adding CustomSelect Component and Creating the Register Page\" />\r\n    <MESSAGE value=\"Editing Register\" />\r\n    <MESSAGE value=\"Adding Student\" />\r\n    <MESSAGE value=\"StudentPage Fix\" />\r\n    <MESSAGE value=\"StudentPage Fixed\" />\r\n    <MESSAGE value=\"Adding InstructorPage\" />\r\n    <MESSAGE value=\"Adding Back Button Functionality\" />\r\n    <MESSAGE value=\"Edited NavBar\" />\r\n    <MESSAGE value=\"Fixing Files and adding custom tableview with its data showing\" />\r\n    <MESSAGE value=\"Adding hard coded users\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding hard coded users\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 10f266619ad0a3f967e40eb14ee2e56a4cdf5d06)
+++ b/.idea/workspace.xml	(date 1738774643746)
@@ -4,9 +4,47 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7dc0a360-3e0f-4273-b965-25f98e1520f8" name="Changes" comment="Adding hard coded users">
+    <list default="true" id="7dc0a360-3e0f-4273-b965-25f98e1520f8" name="Changes" comment="Reloading commits">
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_02_2025_01_05__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_01_07__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_49__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_02_57__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_03_32__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_02_02_2025_20_55__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_16__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_02_18__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_14_46__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_02_2025_19_19__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomPopUp.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppStyle.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppData.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/AppData.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomButton.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/CustomTable.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Navbar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/components/Navbar.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/Course.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/Course.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/Instructor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/Instructor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/InstructorDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/InstructorDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/StudentDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/StudentDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/UsersDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/data/UsersDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/AdministerPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/AdministerPage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/InstructorPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/InstructorPage.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Login.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/Register.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/StudentPage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/studentadminstator/pages/StudentPage.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -37,7 +75,7 @@
   <component name="GithubPullRequestsUISettings">{
   &quot;selectedUrlAndAccountId&quot;: {
     &quot;url&quot;: &quot;https://github.com/IbrahimSamir20/student-mangement.git&quot;,
-    &quot;accountId&quot;: &quot;833215d9-c580-4e4a-9708-71a73fc82ac9&quot;
+    &quot;accountId&quot;: &quot;dd125937-2196-4a25-a92a-c5392ecffc31&quot;
   },
   &quot;recentNewPullRequestHead&quot;: {
     &quot;server&quot;: {
@@ -63,13 +101,12 @@
   "keyToString": {
     "Application.Main.executor": "Run",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "main",
+    "git-widget-placeholder": "Merging main",
     "kotlin-language-version-configured": "true",
     "node.js.detected.package.eslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "preferences.pluginManager",
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
@@ -103,9 +140,16 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.Main" />
-        <item itemvalue="Application.CustomTable$TestApp" />
       </list>
     </recent_temporary>
+  </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.189" />
+        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.189" />
+      </set>
+    </attachedChunks>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -126,6 +170,8 @@
       <workItem from="1738641617122" duration="3062000" />
       <workItem from="1738644710116" duration="118000" />
       <workItem from="1738670349186" duration="189000" />
+      <workItem from="1738678756328" duration="164000" />
+      <workItem from="1738686137992" duration="89000" />
     </task>
     <task id="LOCAL-00001" summary="Adding CustomSelect Component and Creating the Register Page">
       <option name="closed" value="true" />
@@ -207,39 +253,15 @@
       <option name="project" value="LOCAL" />
       <updated>1738670487292</updated>
     </task>
-    <task id="LOCAL-00011" summary="Adding hard coded users">
+    <task id="LOCAL-00011" summary="Reloading commits">
       <option name="closed" value="true" />
-      <created>1738679223000</created>
+      <created>1738678846208</created>
       <option name="number" value="00011" />
       <option name="presentableId" value="LOCAL-00011" />
       <option name="project" value="LOCAL" />
-      <updated>1738679223000</updated>
-    </task>
-    <task id="LOCAL-00012" summary="Adding hard coded users">
-      <option name="closed" value="true" />
-      <created>1738679228797</created>
-      <option name="number" value="00012" />
-      <option name="presentableId" value="LOCAL-00012" />
-      <option name="project" value="LOCAL" />
-      <updated>1738679228797</updated>
-    </task>
-    <task id="LOCAL-00013" summary="Adding hard coded users">
-      <option name="closed" value="true" />
-      <created>1738679230129</created>
-      <option name="number" value="00013" />
-      <option name="presentableId" value="LOCAL-00013" />
-      <option name="project" value="LOCAL" />
-      <updated>1738679230129</updated>
+      <updated>1738678846208</updated>
     </task>
-    <task id="LOCAL-00014" summary="Adding hard coded users">
-      <option name="closed" value="true" />
-      <created>1738679231439</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1738679231439</updated>
-    </task>
-    <option name="localTasksCounter" value="15" />
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -267,6 +289,7 @@
     <MESSAGE value="Edited NavBar" />
     <MESSAGE value="Fixing Files and adding custom tableview with its data showing" />
     <MESSAGE value="Adding hard coded users" />
-    <option name="LAST_COMMIT_MESSAGE" value="Adding hard coded users" />
+    <MESSAGE value="Reloading commits" />
+    <option name="LAST_COMMIT_MESSAGE" value="Reloading commits" />
   </component>
 </project>
\ No newline at end of file
